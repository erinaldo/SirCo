'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.3053
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

'Option Strict Off
'Option Explicit On



''''<summary>
''''Represents a strongly typed in-memory cache of data.
''''</summary>
'<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
' Global.System.Serializable(),  _
' Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
' Global.System.ComponentModel.ToolboxItem(true),  _
' Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
' Global.System.Xml.Serialization.XmlRootAttribute("DSPpalRelacion"),  _
' Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
'Partial Public Class DSPpalRelacion
'    Inherits Global.System.Data.DataSet

'    Private tableTlb_Relacion As Tlb_RelacionDataTable

'    Private tableTlb_menspaga As Tlb_menspagaDataTable

'    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema

'    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'    Public Sub New()
'        MyBase.New
'        Me.BeginInit
'        Me.InitClass
'        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
'        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
'        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
'        Me.EndInit
'    End Sub

'    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
'        MyBase.New(info, context, false)
'        If (Me.IsBinarySerialized(info, context) = true) Then
'            Me.InitVars(false)
'            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
'            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
'            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
'            Return
'        End If
'        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
'        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
'            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
'            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
'            If (Not (ds.Tables("Tlb_Relacion")) Is Nothing) Then
'                MyBase.Tables.Add(New Tlb_RelacionDataTable(ds.Tables("Tlb_Relacion")))
'            End If
'            If (Not (ds.Tables("Tlb_menspaga")) Is Nothing) Then
'                MyBase.Tables.Add(New Tlb_menspagaDataTable(ds.Tables("Tlb_menspaga")))
'            End If
'            Me.DataSetName = ds.DataSetName
'            Me.Prefix = ds.Prefix
'            Me.Namespace = ds.Namespace
'            Me.Locale = ds.Locale
'            Me.CaseSensitive = ds.CaseSensitive
'            Me.EnforceConstraints = ds.EnforceConstraints
'            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
'            Me.InitVars
'        Else
'            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
'        End If
'        Me.GetSerializationData(info, context)
'        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
'        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
'        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
'    End Sub

'    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
'     Global.System.ComponentModel.Browsable(false),  _
'     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
'    Public ReadOnly Property Tlb_Relacion() As Tlb_RelacionDataTable
'        Get
'            Return Me.tableTlb_Relacion
'        End Get
'    End Property

'    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
'     Global.System.ComponentModel.Browsable(false),  _
'     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
'    Public ReadOnly Property Tlb_menspaga() As Tlb_menspagaDataTable
'        Get
'            Return Me.tableTlb_menspaga
'        End Get
'    End Property

'    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
'     Global.System.ComponentModel.BrowsableAttribute(true),  _
'     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
'    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
'        Get
'            Return Me._schemaSerializationMode
'        End Get
'        Set
'            Me._schemaSerializationMode = value
'        End Set
'    End Property

'    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
'     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
'    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
'        Get
'            Return MyBase.Tables
'        End Get
'    End Property

'    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
'     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
'    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
'        Get
'            Return MyBase.Relations
'        End Get
'    End Property

'    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'    Protected Overrides Sub InitializeDerivedDataSet()
'        Me.BeginInit
'        Me.InitClass
'        Me.EndInit
'    End Sub

'    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'    Public Overrides Function Clone() As Global.System.Data.DataSet
'        Dim cln As DSPpalRelacion = CType(MyBase.Clone,DSPpalRelacion)
'        cln.InitVars
'        cln.SchemaSerializationMode = Me.SchemaSerializationMode
'        Return cln
'    End Function

'    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'    Protected Overrides Function ShouldSerializeTables() As Boolean
'        Return false
'    End Function

'    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'    Protected Overrides Function ShouldSerializeRelations() As Boolean
'        Return false
'    End Function

'    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
'        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
'            Me.Reset
'            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
'            ds.ReadXml(reader)
'            If (Not (ds.Tables("Tlb_Relacion")) Is Nothing) Then
'                MyBase.Tables.Add(New Tlb_RelacionDataTable(ds.Tables("Tlb_Relacion")))
'            End If
'            If (Not (ds.Tables("Tlb_menspaga")) Is Nothing) Then
'                MyBase.Tables.Add(New Tlb_menspagaDataTable(ds.Tables("Tlb_menspaga")))
'            End If
'            Me.DataSetName = ds.DataSetName
'            Me.Prefix = ds.Prefix
'            Me.Namespace = ds.Namespace
'            Me.Locale = ds.Locale
'            Me.CaseSensitive = ds.CaseSensitive
'            Me.EnforceConstraints = ds.EnforceConstraints
'            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
'            Me.InitVars
'        Else
'            Me.ReadXml(reader)
'            Me.InitVars
'        End If
'    End Sub

'    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
'        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
'        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
'        stream.Position = 0
'        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
'    End Function

'    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'    Friend Overloads Sub InitVars()
'        Me.InitVars(true)
'    End Sub

'    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
'        Me.tableTlb_Relacion = CType(MyBase.Tables("Tlb_Relacion"),Tlb_RelacionDataTable)
'        If (initTable = true) Then
'            If (Not (Me.tableTlb_Relacion) Is Nothing) Then
'                Me.tableTlb_Relacion.InitVars
'            End If
'        End If
'        Me.tableTlb_menspaga = CType(MyBase.Tables("Tlb_menspaga"),Tlb_menspagaDataTable)
'        If (initTable = true) Then
'            If (Not (Me.tableTlb_menspaga) Is Nothing) Then
'                Me.tableTlb_menspaga.InitVars
'            End If
'        End If
'    End Sub

'    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'    Private Sub InitClass()
'        Me.DataSetName = "DSPpalRelacion"
'        Me.Prefix = ""
'        Me.Namespace = "http://tempuri.org/DSPpalRelacion.xsd"
'        Me.EnforceConstraints = true
'        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
'        Me.tableTlb_Relacion = New Tlb_RelacionDataTable
'        MyBase.Tables.Add(Me.tableTlb_Relacion)
'        Me.tableTlb_menspaga = New Tlb_menspagaDataTable
'        MyBase.Tables.Add(Me.tableTlb_menspaga)
'    End Sub

'    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'    Private Function ShouldSerializeTlb_Relacion() As Boolean
'        Return false
'    End Function

'    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'    Private Function ShouldSerializeTlb_menspaga() As Boolean
'        Return false
'    End Function

'    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
'        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
'            Me.InitVars
'        End If
'    End Sub

'    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
'        Dim ds As DSPpalRelacion = New DSPpalRelacion
'        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
'        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
'        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
'        any.Namespace = ds.Namespace
'        sequence.Items.Add(any)
'        type.Particle = sequence
'        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
'        If xs.Contains(dsSchema.TargetNamespace) Then
'            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
'            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
'            Try 
'                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
'                dsSchema.Write(s1)
'                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
'                Do While schemas.MoveNext
'                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
'                    s2.SetLength(0)
'                    schema.Write(s2)
'                    If (s1.Length = s2.Length) Then
'                        s1.Position = 0
'                        s2.Position = 0

'                        Do While ((s1.Position <> s1.Length)  _
'                                    AndAlso (s1.ReadByte = s2.ReadByte))


'                        Loop
'                        If (s1.Position = s1.Length) Then
'                            Return type
'                        End If
'                    End If

'                Loop
'            Finally
'                If (Not (s1) Is Nothing) Then
'                    s1.Close
'                End If
'                If (Not (s2) Is Nothing) Then
'                    s2.Close
'                End If
'            End Try
'        End If
'        xs.Add(dsSchema)
'        Return type
'    End Function

'    Public Delegate Sub Tlb_RelacionRowChangeEventHandler(ByVal sender As Object, ByVal e As Tlb_RelacionRowChangeEvent)

'    Public Delegate Sub Tlb_menspagaRowChangeEventHandler(ByVal sender As Object, ByVal e As Tlb_menspagaRowChangeEvent)

'    '''<summary>
'    '''Represents the strongly named DataTable class.
'    '''</summary>
'    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
'     Global.System.Serializable(),  _
'     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
'    Partial Public Class Tlb_RelacionDataTable
'        Inherits Global.System.Data.DataTable
'        Implements Global.System.Collections.IEnumerable

'        Private columnDistribuidor As Global.System.Data.DataColumn

'        Private columnFecha_compra As Global.System.Data.DataColumn

'        Private columnNota_Venta As Global.System.Data.DataColumn

'        Private columnNota_y_Vale As Global.System.Data.DataColumn

'        Private columnCliente As Global.System.Data.DataColumn

'        Private columnCompra_Inicial As Global.System.Data.DataColumn

'        Private columnSaldo_Vencido As Global.System.Data.DataColumn

'        Private columnAbonos_x_cubrir As Global.System.Data.DataColumn

'        Private columnAbono_Corte As Global.System.Data.DataColumn

'        Private columnDescuento_x_aplicar As Global.System.Data.DataColumn

'        Private columnSaldo_post_pago As Global.System.Data.DataColumn

'        Private columnTipodis As Global.System.Data.DataColumn

'        Private columnNombre As Global.System.Data.DataColumn

'        Private columnFrecuencia As Global.System.Data.DataColumn

'        Private columnDireccion As Global.System.Data.DataColumn

'        Private columnTelefono As Global.System.Data.DataColumn

'        Private columnLimtcred As Global.System.Data.DataColumn

'        Private columnCobrador As Global.System.Data.DataColumn

'        Private columnSucursal As Global.System.Data.DataColumn

'        Private columnSaldo As Global.System.Data.DataColumn

'        Private columnContacto As Global.System.Data.DataColumn

'        Private columnFolio As Global.System.Data.DataColumn

'        Private columnFecha As Global.System.Data.DataColumn

'        Private columnVence As Global.System.Data.DataColumn

'        Private columnDisponible As Global.System.Data.DataColumn

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Sub New()
'            MyBase.New
'            Me.TableName = "Tlb_Relacion"
'            Me.BeginInit
'            Me.InitClass
'            Me.EndInit
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Friend Sub New(ByVal table As Global.System.Data.DataTable)
'            MyBase.New
'            Me.TableName = table.TableName
'            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
'                Me.CaseSensitive = table.CaseSensitive
'            End If
'            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
'                Me.Locale = table.Locale
'            End If
'            If (table.Namespace <> table.DataSet.Namespace) Then
'                Me.Namespace = table.Namespace
'            End If
'            Me.Prefix = table.Prefix
'            Me.MinimumCapacity = table.MinimumCapacity
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
'            MyBase.New(info, context)
'            Me.InitVars
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public ReadOnly Property DistribuidorColumn() As Global.System.Data.DataColumn
'            Get
'                Return Me.columnDistribuidor
'            End Get
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public ReadOnly Property Fecha_compraColumn() As Global.System.Data.DataColumn
'            Get
'                Return Me.columnFecha_compra
'            End Get
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public ReadOnly Property Nota_VentaColumn() As Global.System.Data.DataColumn
'            Get
'                Return Me.columnNota_Venta
'            End Get
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public ReadOnly Property Nota_y_ValeColumn() As Global.System.Data.DataColumn
'            Get
'                Return Me.columnNota_y_Vale
'            End Get
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public ReadOnly Property ClienteColumn() As Global.System.Data.DataColumn
'            Get
'                Return Me.columnCliente
'            End Get
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public ReadOnly Property Compra_InicialColumn() As Global.System.Data.DataColumn
'            Get
'                Return Me.columnCompra_Inicial
'            End Get
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public ReadOnly Property Saldo_VencidoColumn() As Global.System.Data.DataColumn
'            Get
'                Return Me.columnSaldo_Vencido
'            End Get
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public ReadOnly Property Abonos_x_cubrirColumn() As Global.System.Data.DataColumn
'            Get
'                Return Me.columnAbonos_x_cubrir
'            End Get
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public ReadOnly Property Abono_CorteColumn() As Global.System.Data.DataColumn
'            Get
'                Return Me.columnAbono_Corte
'            End Get
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public ReadOnly Property Descuento_x_aplicarColumn() As Global.System.Data.DataColumn
'            Get
'                Return Me.columnDescuento_x_aplicar
'            End Get
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public ReadOnly Property Saldo_post_pagoColumn() As Global.System.Data.DataColumn
'            Get
'                Return Me.columnSaldo_post_pago
'            End Get
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public ReadOnly Property TipodisColumn() As Global.System.Data.DataColumn
'            Get
'                Return Me.columnTipodis
'            End Get
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public ReadOnly Property NombreColumn() As Global.System.Data.DataColumn
'            Get
'                Return Me.columnNombre
'            End Get
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public ReadOnly Property FrecuenciaColumn() As Global.System.Data.DataColumn
'            Get
'                Return Me.columnFrecuencia
'            End Get
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public ReadOnly Property DireccionColumn() As Global.System.Data.DataColumn
'            Get
'                Return Me.columnDireccion
'            End Get
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public ReadOnly Property TelefonoColumn() As Global.System.Data.DataColumn
'            Get
'                Return Me.columnTelefono
'            End Get
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public ReadOnly Property LimtcredColumn() As Global.System.Data.DataColumn
'            Get
'                Return Me.columnLimtcred
'            End Get
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public ReadOnly Property CobradorColumn() As Global.System.Data.DataColumn
'            Get
'                Return Me.columnCobrador
'            End Get
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public ReadOnly Property SucursalColumn() As Global.System.Data.DataColumn
'            Get
'                Return Me.columnSucursal
'            End Get
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public ReadOnly Property SaldoColumn() As Global.System.Data.DataColumn
'            Get
'                Return Me.columnSaldo
'            End Get
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public ReadOnly Property ContactoColumn() As Global.System.Data.DataColumn
'            Get
'                Return Me.columnContacto
'            End Get
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public ReadOnly Property FolioColumn() As Global.System.Data.DataColumn
'            Get
'                Return Me.columnFolio
'            End Get
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public ReadOnly Property FechaColumn() As Global.System.Data.DataColumn
'            Get
'                Return Me.columnFecha
'            End Get
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public ReadOnly Property VenceColumn() As Global.System.Data.DataColumn
'            Get
'                Return Me.columnVence
'            End Get
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public ReadOnly Property DisponibleColumn() As Global.System.Data.DataColumn
'            Get
'                Return Me.columnDisponible
'            End Get
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
'         Global.System.ComponentModel.Browsable(false)>  _
'        Public ReadOnly Property Count() As Integer
'            Get
'                Return Me.Rows.Count
'            End Get
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Default ReadOnly Property Item(ByVal index As Integer) As Tlb_RelacionRow
'            Get
'                Return CType(Me.Rows(index),Tlb_RelacionRow)
'            End Get
'        End Property

'        Public Event Tlb_RelacionRowChanging As Tlb_RelacionRowChangeEventHandler

'        Public Event Tlb_RelacionRowChanged As Tlb_RelacionRowChangeEventHandler

'        Public Event Tlb_RelacionRowDeleting As Tlb_RelacionRowChangeEventHandler

'        Public Event Tlb_RelacionRowDeleted As Tlb_RelacionRowChangeEventHandler

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Overloads Sub AddTlb_RelacionRow(ByVal row As Tlb_RelacionRow)
'            Me.Rows.Add(row)
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Overloads Function AddTlb_RelacionRow( _
'                    ByVal Distribuidor As String,  _
'                    ByVal Fecha_compra As String,  _
'                    ByVal Nota_Venta As String,  _
'                    ByVal Nota_y_Vale As String,  _
'                    ByVal Cliente As String,  _
'                    ByVal Compra_Inicial As Double,  _
'                    ByVal Saldo_Vencido As Double,  _
'                    ByVal Abonos_x_cubrir As String,  _
'                    ByVal Abono_Corte As Double,  _
'                    ByVal Descuento_x_aplicar As Double,  _
'                    ByVal Saldo_post_pago As Double,  _
'                    ByVal Tipodis As String,  _
'                    ByVal Nombre As String,  _
'                    ByVal Frecuencia As String,  _
'                    ByVal Direccion As String,  _
'                    ByVal Telefono As String,  _
'                    ByVal Limtcred As Double,  _
'                    ByVal Cobrador As String,  _
'                    ByVal Sucursal As String,  _
'                    ByVal Saldo As Double,  _
'                    ByVal Contacto As String,  _
'                    ByVal Folio As String,  _
'                    ByVal Fecha As Date,  _
'                    ByVal Vence As Date,  _
'                    ByVal Disponible As Double) As Tlb_RelacionRow
'            Dim rowTlb_RelacionRow As Tlb_RelacionRow = CType(Me.NewRow,Tlb_RelacionRow)
'            Dim columnValuesArray() As Object = New Object() {Distribuidor, Fecha_compra, Nota_Venta, Nota_y_Vale, Cliente, Compra_Inicial, Saldo_Vencido, Abonos_x_cubrir, Abono_Corte, Descuento_x_aplicar, Saldo_post_pago, Tipodis, Nombre, Frecuencia, Direccion, Telefono, Limtcred, Cobrador, Sucursal, Saldo, Contacto, Folio, Fecha, Vence, Disponible}
'            rowTlb_RelacionRow.ItemArray = columnValuesArray
'            Me.Rows.Add(rowTlb_RelacionRow)
'            Return rowTlb_RelacionRow
'        End Function

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
'            Return Me.Rows.GetEnumerator
'        End Function

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Overrides Function Clone() As Global.System.Data.DataTable
'            Dim cln As Tlb_RelacionDataTable = CType(MyBase.Clone,Tlb_RelacionDataTable)
'            cln.InitVars
'            Return cln
'        End Function

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
'            Return New Tlb_RelacionDataTable
'        End Function

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Friend Sub InitVars()
'            Me.columnDistribuidor = MyBase.Columns("Distribuidor")
'            Me.columnFecha_compra = MyBase.Columns("Fecha compra")
'            Me.columnNota_Venta = MyBase.Columns("Nota Venta")
'            Me.columnNota_y_Vale = MyBase.Columns("Nota y Vale")
'            Me.columnCliente = MyBase.Columns("Cliente")
'            Me.columnCompra_Inicial = MyBase.Columns("Compra Inicial")
'            Me.columnSaldo_Vencido = MyBase.Columns("Saldo Vencido")
'            Me.columnAbonos_x_cubrir = MyBase.Columns("Abonos x cubrir")
'            Me.columnAbono_Corte = MyBase.Columns("Abono Corte")
'            Me.columnDescuento_x_aplicar = MyBase.Columns("Descuento x aplicar")
'            Me.columnSaldo_post_pago = MyBase.Columns("Saldo post pago")
'            Me.columnTipodis = MyBase.Columns("Tipodis")
'            Me.columnNombre = MyBase.Columns("Nombre")
'            Me.columnFrecuencia = MyBase.Columns("Frecuencia")
'            Me.columnDireccion = MyBase.Columns("Direccion")
'            Me.columnTelefono = MyBase.Columns("Telefono")
'            Me.columnLimtcred = MyBase.Columns("Limtcred")
'            Me.columnCobrador = MyBase.Columns("Cobrador")
'            Me.columnSucursal = MyBase.Columns("Sucursal")
'            Me.columnSaldo = MyBase.Columns("Saldo")
'            Me.columnContacto = MyBase.Columns("Contacto")
'            Me.columnFolio = MyBase.Columns("Folio")
'            Me.columnFecha = MyBase.Columns("Fecha")
'            Me.columnVence = MyBase.Columns("Vence")
'            Me.columnDisponible = MyBase.Columns("Disponible")
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Private Sub InitClass()
'            Me.columnDistribuidor = New Global.System.Data.DataColumn("Distribuidor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
'            MyBase.Columns.Add(Me.columnDistribuidor)
'            Me.columnFecha_compra = New Global.System.Data.DataColumn("Fecha compra", GetType(String), Nothing, Global.System.Data.MappingType.Element)
'            MyBase.Columns.Add(Me.columnFecha_compra)
'            Me.columnNota_Venta = New Global.System.Data.DataColumn("Nota Venta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
'            MyBase.Columns.Add(Me.columnNota_Venta)
'            Me.columnNota_y_Vale = New Global.System.Data.DataColumn("Nota y Vale", GetType(String), Nothing, Global.System.Data.MappingType.Element)
'            MyBase.Columns.Add(Me.columnNota_y_Vale)
'            Me.columnCliente = New Global.System.Data.DataColumn("Cliente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
'            MyBase.Columns.Add(Me.columnCliente)
'            Me.columnCompra_Inicial = New Global.System.Data.DataColumn("Compra Inicial", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
'            MyBase.Columns.Add(Me.columnCompra_Inicial)
'            Me.columnSaldo_Vencido = New Global.System.Data.DataColumn("Saldo Vencido", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
'            MyBase.Columns.Add(Me.columnSaldo_Vencido)
'            Me.columnAbonos_x_cubrir = New Global.System.Data.DataColumn("Abonos x cubrir", GetType(String), Nothing, Global.System.Data.MappingType.Element)
'            MyBase.Columns.Add(Me.columnAbonos_x_cubrir)
'            Me.columnAbono_Corte = New Global.System.Data.DataColumn("Abono Corte", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
'            MyBase.Columns.Add(Me.columnAbono_Corte)
'            Me.columnDescuento_x_aplicar = New Global.System.Data.DataColumn("Descuento x aplicar", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
'            MyBase.Columns.Add(Me.columnDescuento_x_aplicar)
'            Me.columnSaldo_post_pago = New Global.System.Data.DataColumn("Saldo post pago", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
'            MyBase.Columns.Add(Me.columnSaldo_post_pago)
'            Me.columnTipodis = New Global.System.Data.DataColumn("Tipodis", GetType(String), Nothing, Global.System.Data.MappingType.Element)
'            MyBase.Columns.Add(Me.columnTipodis)
'            Me.columnNombre = New Global.System.Data.DataColumn("Nombre", GetType(String), Nothing, Global.System.Data.MappingType.Element)
'            MyBase.Columns.Add(Me.columnNombre)
'            Me.columnFrecuencia = New Global.System.Data.DataColumn("Frecuencia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
'            MyBase.Columns.Add(Me.columnFrecuencia)
'            Me.columnDireccion = New Global.System.Data.DataColumn("Direccion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
'            MyBase.Columns.Add(Me.columnDireccion)
'            Me.columnTelefono = New Global.System.Data.DataColumn("Telefono", GetType(String), Nothing, Global.System.Data.MappingType.Element)
'            MyBase.Columns.Add(Me.columnTelefono)
'            Me.columnLimtcred = New Global.System.Data.DataColumn("Limtcred", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
'            MyBase.Columns.Add(Me.columnLimtcred)
'            Me.columnCobrador = New Global.System.Data.DataColumn("Cobrador", GetType(String), Nothing, Global.System.Data.MappingType.Element)
'            MyBase.Columns.Add(Me.columnCobrador)
'            Me.columnSucursal = New Global.System.Data.DataColumn("Sucursal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
'            MyBase.Columns.Add(Me.columnSucursal)
'            Me.columnSaldo = New Global.System.Data.DataColumn("Saldo", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
'            MyBase.Columns.Add(Me.columnSaldo)
'            Me.columnContacto = New Global.System.Data.DataColumn("Contacto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
'            MyBase.Columns.Add(Me.columnContacto)
'            Me.columnFolio = New Global.System.Data.DataColumn("Folio", GetType(String), Nothing, Global.System.Data.MappingType.Element)
'            MyBase.Columns.Add(Me.columnFolio)
'            Me.columnFecha = New Global.System.Data.DataColumn("Fecha", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
'            MyBase.Columns.Add(Me.columnFecha)
'            Me.columnVence = New Global.System.Data.DataColumn("Vence", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
'            MyBase.Columns.Add(Me.columnVence)
'            Me.columnDisponible = New Global.System.Data.DataColumn("Disponible", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
'            MyBase.Columns.Add(Me.columnDisponible)
'            Me.columnDistribuidor.AllowDBNull = false
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Function NewTlb_RelacionRow() As Tlb_RelacionRow
'            Return CType(Me.NewRow,Tlb_RelacionRow)
'        End Function

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
'            Return New Tlb_RelacionRow(builder)
'        End Function

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Protected Overrides Function GetRowType() As Global.System.Type
'            Return GetType(Tlb_RelacionRow)
'        End Function

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
'            MyBase.OnRowChanged(e)
'            If (Not (Me.Tlb_RelacionRowChangedEvent) Is Nothing) Then
'                RaiseEvent Tlb_RelacionRowChanged(Me, New Tlb_RelacionRowChangeEvent(CType(e.Row,Tlb_RelacionRow), e.Action))
'            End If
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
'            MyBase.OnRowChanging(e)
'            If (Not (Me.Tlb_RelacionRowChangingEvent) Is Nothing) Then
'                RaiseEvent Tlb_RelacionRowChanging(Me, New Tlb_RelacionRowChangeEvent(CType(e.Row,Tlb_RelacionRow), e.Action))
'            End If
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
'            MyBase.OnRowDeleted(e)
'            If (Not (Me.Tlb_RelacionRowDeletedEvent) Is Nothing) Then
'                RaiseEvent Tlb_RelacionRowDeleted(Me, New Tlb_RelacionRowChangeEvent(CType(e.Row,Tlb_RelacionRow), e.Action))
'            End If
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
'            MyBase.OnRowDeleting(e)
'            If (Not (Me.Tlb_RelacionRowDeletingEvent) Is Nothing) Then
'                RaiseEvent Tlb_RelacionRowDeleting(Me, New Tlb_RelacionRowChangeEvent(CType(e.Row,Tlb_RelacionRow), e.Action))
'            End If
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Sub RemoveTlb_RelacionRow(ByVal row As Tlb_RelacionRow)
'            Me.Rows.Remove(row)
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
'            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
'            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
'            Dim ds As DSPpalRelacion = New DSPpalRelacion
'            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
'            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
'            any1.MinOccurs = New Decimal(0)
'            any1.MaxOccurs = Decimal.MaxValue
'            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
'            sequence.Items.Add(any1)
'            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
'            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
'            any2.MinOccurs = New Decimal(1)
'            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
'            sequence.Items.Add(any2)
'            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
'            attribute1.Name = "namespace"
'            attribute1.FixedValue = ds.Namespace
'            type.Attributes.Add(attribute1)
'            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
'            attribute2.Name = "tableTypeName"
'            attribute2.FixedValue = "Tlb_RelacionDataTable"
'            type.Attributes.Add(attribute2)
'            type.Particle = sequence
'            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
'            If xs.Contains(dsSchema.TargetNamespace) Then
'                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
'                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
'                Try 
'                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
'                    dsSchema.Write(s1)
'                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
'                    Do While schemas.MoveNext
'                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
'                        s2.SetLength(0)
'                        schema.Write(s2)
'                        If (s1.Length = s2.Length) Then
'                            s1.Position = 0
'                            s2.Position = 0

'                            Do While ((s1.Position <> s1.Length)  _
'                                        AndAlso (s1.ReadByte = s2.ReadByte))


'                            Loop
'                            If (s1.Position = s1.Length) Then
'                                Return type
'                            End If
'                        End If

'                    Loop
'                Finally
'                    If (Not (s1) Is Nothing) Then
'                        s1.Close
'                    End If
'                    If (Not (s2) Is Nothing) Then
'                        s2.Close
'                    End If
'                End Try
'            End If
'            xs.Add(dsSchema)
'            Return type
'        End Function
'    End Class

'    '''<summary>
'    '''Represents the strongly named DataTable class.
'    '''</summary>
'    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
'     Global.System.Serializable(),  _
'     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
'    Partial Public Class Tlb_menspagaDataTable
'        Inherits Global.System.Data.DataTable
'        Implements Global.System.Collections.IEnumerable

'        Private columnRegistroR1 As Global.System.Data.DataColumn

'        Private columnRegistroR2 As Global.System.Data.DataColumn

'        Private columnRegistroR3 As Global.System.Data.DataColumn

'        Private columnRegistroR4 As Global.System.Data.DataColumn

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Sub New()
'            MyBase.New
'            Me.TableName = "Tlb_menspaga"
'            Me.BeginInit
'            Me.InitClass
'            Me.EndInit
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Friend Sub New(ByVal table As Global.System.Data.DataTable)
'            MyBase.New
'            Me.TableName = table.TableName
'            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
'                Me.CaseSensitive = table.CaseSensitive
'            End If
'            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
'                Me.Locale = table.Locale
'            End If
'            If (table.Namespace <> table.DataSet.Namespace) Then
'                Me.Namespace = table.Namespace
'            End If
'            Me.Prefix = table.Prefix
'            Me.MinimumCapacity = table.MinimumCapacity
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
'            MyBase.New(info, context)
'            Me.InitVars
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public ReadOnly Property RegistroR1Column() As Global.System.Data.DataColumn
'            Get
'                Return Me.columnRegistroR1
'            End Get
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public ReadOnly Property RegistroR2Column() As Global.System.Data.DataColumn
'            Get
'                Return Me.columnRegistroR2
'            End Get
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public ReadOnly Property RegistroR3Column() As Global.System.Data.DataColumn
'            Get
'                Return Me.columnRegistroR3
'            End Get
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public ReadOnly Property RegistroR4Column() As Global.System.Data.DataColumn
'            Get
'                Return Me.columnRegistroR4
'            End Get
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
'         Global.System.ComponentModel.Browsable(false)>  _
'        Public ReadOnly Property Count() As Integer
'            Get
'                Return Me.Rows.Count
'            End Get
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Default ReadOnly Property Item(ByVal index As Integer) As Tlb_menspagaRow
'            Get
'                Return CType(Me.Rows(index),Tlb_menspagaRow)
'            End Get
'        End Property

'        Public Event Tlb_menspagaRowChanging As Tlb_menspagaRowChangeEventHandler

'        Public Event Tlb_menspagaRowChanged As Tlb_menspagaRowChangeEventHandler

'        Public Event Tlb_menspagaRowDeleting As Tlb_menspagaRowChangeEventHandler

'        Public Event Tlb_menspagaRowDeleted As Tlb_menspagaRowChangeEventHandler

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Overloads Sub AddTlb_menspagaRow(ByVal row As Tlb_menspagaRow)
'            Me.Rows.Add(row)
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Overloads Function AddTlb_menspagaRow(ByVal RegistroR1 As String, ByVal RegistroR2 As String, ByVal RegistroR3 As String, ByVal RegistroR4 As String) As Tlb_menspagaRow
'            Dim rowTlb_menspagaRow As Tlb_menspagaRow = CType(Me.NewRow,Tlb_menspagaRow)
'            Dim columnValuesArray() As Object = New Object() {RegistroR1, RegistroR2, RegistroR3, RegistroR4}
'            rowTlb_menspagaRow.ItemArray = columnValuesArray
'            Me.Rows.Add(rowTlb_menspagaRow)
'            Return rowTlb_menspagaRow
'        End Function

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
'            Return Me.Rows.GetEnumerator
'        End Function

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Overrides Function Clone() As Global.System.Data.DataTable
'            Dim cln As Tlb_menspagaDataTable = CType(MyBase.Clone,Tlb_menspagaDataTable)
'            cln.InitVars
'            Return cln
'        End Function

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
'            Return New Tlb_menspagaDataTable
'        End Function

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Friend Sub InitVars()
'            Me.columnRegistroR1 = MyBase.Columns("RegistroR1")
'            Me.columnRegistroR2 = MyBase.Columns("RegistroR2")
'            Me.columnRegistroR3 = MyBase.Columns("RegistroR3")
'            Me.columnRegistroR4 = MyBase.Columns("RegistroR4")
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Private Sub InitClass()
'            Me.columnRegistroR1 = New Global.System.Data.DataColumn("RegistroR1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
'            MyBase.Columns.Add(Me.columnRegistroR1)
'            Me.columnRegistroR2 = New Global.System.Data.DataColumn("RegistroR2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
'            MyBase.Columns.Add(Me.columnRegistroR2)
'            Me.columnRegistroR3 = New Global.System.Data.DataColumn("RegistroR3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
'            MyBase.Columns.Add(Me.columnRegistroR3)
'            Me.columnRegistroR4 = New Global.System.Data.DataColumn("RegistroR4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
'            MyBase.Columns.Add(Me.columnRegistroR4)
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Function NewTlb_menspagaRow() As Tlb_menspagaRow
'            Return CType(Me.NewRow,Tlb_menspagaRow)
'        End Function

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
'            Return New Tlb_menspagaRow(builder)
'        End Function

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Protected Overrides Function GetRowType() As Global.System.Type
'            Return GetType(Tlb_menspagaRow)
'        End Function

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
'            MyBase.OnRowChanged(e)
'            If (Not (Me.Tlb_menspagaRowChangedEvent) Is Nothing) Then
'                RaiseEvent Tlb_menspagaRowChanged(Me, New Tlb_menspagaRowChangeEvent(CType(e.Row,Tlb_menspagaRow), e.Action))
'            End If
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
'            MyBase.OnRowChanging(e)
'            If (Not (Me.Tlb_menspagaRowChangingEvent) Is Nothing) Then
'                RaiseEvent Tlb_menspagaRowChanging(Me, New Tlb_menspagaRowChangeEvent(CType(e.Row,Tlb_menspagaRow), e.Action))
'            End If
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
'            MyBase.OnRowDeleted(e)
'            If (Not (Me.Tlb_menspagaRowDeletedEvent) Is Nothing) Then
'                RaiseEvent Tlb_menspagaRowDeleted(Me, New Tlb_menspagaRowChangeEvent(CType(e.Row,Tlb_menspagaRow), e.Action))
'            End If
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
'            MyBase.OnRowDeleting(e)
'            If (Not (Me.Tlb_menspagaRowDeletingEvent) Is Nothing) Then
'                RaiseEvent Tlb_menspagaRowDeleting(Me, New Tlb_menspagaRowChangeEvent(CType(e.Row,Tlb_menspagaRow), e.Action))
'            End If
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Sub RemoveTlb_menspagaRow(ByVal row As Tlb_menspagaRow)
'            Me.Rows.Remove(row)
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
'            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
'            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
'            Dim ds As DSPpalRelacion = New DSPpalRelacion
'            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
'            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
'            any1.MinOccurs = New Decimal(0)
'            any1.MaxOccurs = Decimal.MaxValue
'            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
'            sequence.Items.Add(any1)
'            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
'            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
'            any2.MinOccurs = New Decimal(1)
'            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
'            sequence.Items.Add(any2)
'            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
'            attribute1.Name = "namespace"
'            attribute1.FixedValue = ds.Namespace
'            type.Attributes.Add(attribute1)
'            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
'            attribute2.Name = "tableTypeName"
'            attribute2.FixedValue = "Tlb_menspagaDataTable"
'            type.Attributes.Add(attribute2)
'            type.Particle = sequence
'            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
'            If xs.Contains(dsSchema.TargetNamespace) Then
'                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
'                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
'                Try 
'                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
'                    dsSchema.Write(s1)
'                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
'                    Do While schemas.MoveNext
'                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
'                        s2.SetLength(0)
'                        schema.Write(s2)
'                        If (s1.Length = s2.Length) Then
'                            s1.Position = 0
'                            s2.Position = 0

'                            Do While ((s1.Position <> s1.Length)  _
'                                        AndAlso (s1.ReadByte = s2.ReadByte))


'                            Loop
'                            If (s1.Position = s1.Length) Then
'                                Return type
'                            End If
'                        End If

'                    Loop
'                Finally
'                    If (Not (s1) Is Nothing) Then
'                        s1.Close
'                    End If
'                    If (Not (s2) Is Nothing) Then
'                        s2.Close
'                    End If
'                End Try
'            End If
'            xs.Add(dsSchema)
'            Return type
'        End Function
'    End Class

'    '''<summary>
'    '''Represents strongly named DataRow class.
'    '''</summary>
'    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
'    Partial Public Class Tlb_RelacionRow
'        Inherits Global.System.Data.DataRow

'        Private tableTlb_Relacion As Tlb_RelacionDataTable

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
'            MyBase.New(rb)
'            Me.tableTlb_Relacion = CType(Me.Table,Tlb_RelacionDataTable)
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Property Distribuidor() As String
'            Get
'                Return CType(Me(Me.tableTlb_Relacion.DistribuidorColumn),String)
'            End Get
'            Set
'                Me(Me.tableTlb_Relacion.DistribuidorColumn) = value
'            End Set
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Property Fecha_compra() As String
'            Get
'                Try 
'                    Return CType(Me(Me.tableTlb_Relacion.Fecha_compraColumn),String)
'                Catch e As Global.System.InvalidCastException
'                    Throw New Global.System.Data.StrongTypingException("The value for column 'Fecha compra' in table 'Tlb_Relacion' is DBNull.", e)
'                End Try
'            End Get
'            Set
'                Me(Me.tableTlb_Relacion.Fecha_compraColumn) = value
'            End Set
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Property Nota_Venta() As String
'            Get
'                Try 
'                    Return CType(Me(Me.tableTlb_Relacion.Nota_VentaColumn),String)
'                Catch e As Global.System.InvalidCastException
'                    Throw New Global.System.Data.StrongTypingException("The value for column 'Nota Venta' in table 'Tlb_Relacion' is DBNull.", e)
'                End Try
'            End Get
'            Set
'                Me(Me.tableTlb_Relacion.Nota_VentaColumn) = value
'            End Set
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Property Nota_y_Vale() As String
'            Get
'                Try 
'                    Return CType(Me(Me.tableTlb_Relacion.Nota_y_ValeColumn),String)
'                Catch e As Global.System.InvalidCastException
'                    Throw New Global.System.Data.StrongTypingException("The value for column 'Nota y Vale' in table 'Tlb_Relacion' is DBNull.", e)
'                End Try
'            End Get
'            Set
'                Me(Me.tableTlb_Relacion.Nota_y_ValeColumn) = value
'            End Set
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Property Cliente() As String
'            Get
'                Try 
'                    Return CType(Me(Me.tableTlb_Relacion.ClienteColumn),String)
'                Catch e As Global.System.InvalidCastException
'                    Throw New Global.System.Data.StrongTypingException("The value for column 'Cliente' in table 'Tlb_Relacion' is DBNull.", e)
'                End Try
'            End Get
'            Set
'                Me(Me.tableTlb_Relacion.ClienteColumn) = value
'            End Set
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Property Compra_Inicial() As Double
'            Get
'                Try 
'                    Return CType(Me(Me.tableTlb_Relacion.Compra_InicialColumn),Double)
'                Catch e As Global.System.InvalidCastException
'                    Throw New Global.System.Data.StrongTypingException("The value for column 'Compra Inicial' in table 'Tlb_Relacion' is DBNull.", e)
'                End Try
'            End Get
'            Set
'                Me(Me.tableTlb_Relacion.Compra_InicialColumn) = value
'            End Set
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Property Saldo_Vencido() As Double
'            Get
'                Try 
'                    Return CType(Me(Me.tableTlb_Relacion.Saldo_VencidoColumn),Double)
'                Catch e As Global.System.InvalidCastException
'                    Throw New Global.System.Data.StrongTypingException("The value for column 'Saldo Vencido' in table 'Tlb_Relacion' is DBNull.", e)
'                End Try
'            End Get
'            Set
'                Me(Me.tableTlb_Relacion.Saldo_VencidoColumn) = value
'            End Set
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Property Abonos_x_cubrir() As String
'            Get
'                Try 
'                    Return CType(Me(Me.tableTlb_Relacion.Abonos_x_cubrirColumn),String)
'                Catch e As Global.System.InvalidCastException
'                    Throw New Global.System.Data.StrongTypingException("The value for column 'Abonos x cubrir' in table 'Tlb_Relacion' is DBNull.", e)
'                End Try
'            End Get
'            Set
'                Me(Me.tableTlb_Relacion.Abonos_x_cubrirColumn) = value
'            End Set
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Property Abono_Corte() As Double
'            Get
'                Try 
'                    Return CType(Me(Me.tableTlb_Relacion.Abono_CorteColumn),Double)
'                Catch e As Global.System.InvalidCastException
'                    Throw New Global.System.Data.StrongTypingException("The value for column 'Abono Corte' in table 'Tlb_Relacion' is DBNull.", e)
'                End Try
'            End Get
'            Set
'                Me(Me.tableTlb_Relacion.Abono_CorteColumn) = value
'            End Set
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Property Descuento_x_aplicar() As Double
'            Get
'                Try 
'                    Return CType(Me(Me.tableTlb_Relacion.Descuento_x_aplicarColumn),Double)
'                Catch e As Global.System.InvalidCastException
'                    Throw New Global.System.Data.StrongTypingException("The value for column 'Descuento x aplicar' in table 'Tlb_Relacion' is DBNull.", e)
'                End Try
'            End Get
'            Set
'                Me(Me.tableTlb_Relacion.Descuento_x_aplicarColumn) = value
'            End Set
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Property Saldo_post_pago() As Double
'            Get
'                Try 
'                    Return CType(Me(Me.tableTlb_Relacion.Saldo_post_pagoColumn),Double)
'                Catch e As Global.System.InvalidCastException
'                    Throw New Global.System.Data.StrongTypingException("The value for column 'Saldo post pago' in table 'Tlb_Relacion' is DBNull.", e)
'                End Try
'            End Get
'            Set
'                Me(Me.tableTlb_Relacion.Saldo_post_pagoColumn) = value
'            End Set
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Property Tipodis() As String
'            Get
'                Try 
'                    Return CType(Me(Me.tableTlb_Relacion.TipodisColumn),String)
'                Catch e As Global.System.InvalidCastException
'                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tipodis' in table 'Tlb_Relacion' is DBNull.", e)
'                End Try
'            End Get
'            Set
'                Me(Me.tableTlb_Relacion.TipodisColumn) = value
'            End Set
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Property Nombre() As String
'            Get
'                Try 
'                    Return CType(Me(Me.tableTlb_Relacion.NombreColumn),String)
'                Catch e As Global.System.InvalidCastException
'                    Throw New Global.System.Data.StrongTypingException("The value for column 'Nombre' in table 'Tlb_Relacion' is DBNull.", e)
'                End Try
'            End Get
'            Set
'                Me(Me.tableTlb_Relacion.NombreColumn) = value
'            End Set
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Property Frecuencia() As String
'            Get
'                Try 
'                    Return CType(Me(Me.tableTlb_Relacion.FrecuenciaColumn),String)
'                Catch e As Global.System.InvalidCastException
'                    Throw New Global.System.Data.StrongTypingException("The value for column 'Frecuencia' in table 'Tlb_Relacion' is DBNull.", e)
'                End Try
'            End Get
'            Set
'                Me(Me.tableTlb_Relacion.FrecuenciaColumn) = value
'            End Set
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Property Direccion() As String
'            Get
'                Try 
'                    Return CType(Me(Me.tableTlb_Relacion.DireccionColumn),String)
'                Catch e As Global.System.InvalidCastException
'                    Throw New Global.System.Data.StrongTypingException("The value for column 'Direccion' in table 'Tlb_Relacion' is DBNull.", e)
'                End Try
'            End Get
'            Set
'                Me(Me.tableTlb_Relacion.DireccionColumn) = value
'            End Set
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Property Telefono() As String
'            Get
'                Try 
'                    Return CType(Me(Me.tableTlb_Relacion.TelefonoColumn),String)
'                Catch e As Global.System.InvalidCastException
'                    Throw New Global.System.Data.StrongTypingException("The value for column 'Telefono' in table 'Tlb_Relacion' is DBNull.", e)
'                End Try
'            End Get
'            Set
'                Me(Me.tableTlb_Relacion.TelefonoColumn) = value
'            End Set
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Property Limtcred() As Double
'            Get
'                Try 
'                    Return CType(Me(Me.tableTlb_Relacion.LimtcredColumn),Double)
'                Catch e As Global.System.InvalidCastException
'                    Throw New Global.System.Data.StrongTypingException("The value for column 'Limtcred' in table 'Tlb_Relacion' is DBNull.", e)
'                End Try
'            End Get
'            Set
'                Me(Me.tableTlb_Relacion.LimtcredColumn) = value
'            End Set
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Property Cobrador() As String
'            Get
'                Try 
'                    Return CType(Me(Me.tableTlb_Relacion.CobradorColumn),String)
'                Catch e As Global.System.InvalidCastException
'                    Throw New Global.System.Data.StrongTypingException("The value for column 'Cobrador' in table 'Tlb_Relacion' is DBNull.", e)
'                End Try
'            End Get
'            Set
'                Me(Me.tableTlb_Relacion.CobradorColumn) = value
'            End Set
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Property Sucursal() As String
'            Get
'                Try 
'                    Return CType(Me(Me.tableTlb_Relacion.SucursalColumn),String)
'                Catch e As Global.System.InvalidCastException
'                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sucursal' in table 'Tlb_Relacion' is DBNull.", e)
'                End Try
'            End Get
'            Set
'                Me(Me.tableTlb_Relacion.SucursalColumn) = value
'            End Set
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Property Saldo() As Double
'            Get
'                Try 
'                    Return CType(Me(Me.tableTlb_Relacion.SaldoColumn),Double)
'                Catch e As Global.System.InvalidCastException
'                    Throw New Global.System.Data.StrongTypingException("The value for column 'Saldo' in table 'Tlb_Relacion' is DBNull.", e)
'                End Try
'            End Get
'            Set
'                Me(Me.tableTlb_Relacion.SaldoColumn) = value
'            End Set
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Property Contacto() As String
'            Get
'                Try 
'                    Return CType(Me(Me.tableTlb_Relacion.ContactoColumn),String)
'                Catch e As Global.System.InvalidCastException
'                    Throw New Global.System.Data.StrongTypingException("The value for column 'Contacto' in table 'Tlb_Relacion' is DBNull.", e)
'                End Try
'            End Get
'            Set
'                Me(Me.tableTlb_Relacion.ContactoColumn) = value
'            End Set
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Property Folio() As String
'            Get
'                Try 
'                    Return CType(Me(Me.tableTlb_Relacion.FolioColumn),String)
'                Catch e As Global.System.InvalidCastException
'                    Throw New Global.System.Data.StrongTypingException("The value for column 'Folio' in table 'Tlb_Relacion' is DBNull.", e)
'                End Try
'            End Get
'            Set
'                Me(Me.tableTlb_Relacion.FolioColumn) = value
'            End Set
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Property Fecha() As Date
'            Get
'                Try 
'                    Return CType(Me(Me.tableTlb_Relacion.FechaColumn),Date)
'                Catch e As Global.System.InvalidCastException
'                    Throw New Global.System.Data.StrongTypingException("The value for column 'Fecha' in table 'Tlb_Relacion' is DBNull.", e)
'                End Try
'            End Get
'            Set
'                Me(Me.tableTlb_Relacion.FechaColumn) = value
'            End Set
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Property Vence() As Date
'            Get
'                Try 
'                    Return CType(Me(Me.tableTlb_Relacion.VenceColumn),Date)
'                Catch e As Global.System.InvalidCastException
'                    Throw New Global.System.Data.StrongTypingException("The value for column 'Vence' in table 'Tlb_Relacion' is DBNull.", e)
'                End Try
'            End Get
'            Set
'                Me(Me.tableTlb_Relacion.VenceColumn) = value
'            End Set
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Property Disponible() As Double
'            Get
'                Try 
'                    Return CType(Me(Me.tableTlb_Relacion.DisponibleColumn),Double)
'                Catch e As Global.System.InvalidCastException
'                    Throw New Global.System.Data.StrongTypingException("The value for column 'Disponible' in table 'Tlb_Relacion' is DBNull.", e)
'                End Try
'            End Get
'            Set
'                Me(Me.tableTlb_Relacion.DisponibleColumn) = value
'            End Set
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Function IsFecha_compraNull() As Boolean
'            Return Me.IsNull(Me.tableTlb_Relacion.Fecha_compraColumn)
'        End Function

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Sub SetFecha_compraNull()
'            Me(Me.tableTlb_Relacion.Fecha_compraColumn) = Global.System.Convert.DBNull
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Function IsNota_VentaNull() As Boolean
'            Return Me.IsNull(Me.tableTlb_Relacion.Nota_VentaColumn)
'        End Function

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Sub SetNota_VentaNull()
'            Me(Me.tableTlb_Relacion.Nota_VentaColumn) = Global.System.Convert.DBNull
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Function IsNota_y_ValeNull() As Boolean
'            Return Me.IsNull(Me.tableTlb_Relacion.Nota_y_ValeColumn)
'        End Function

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Sub SetNota_y_ValeNull()
'            Me(Me.tableTlb_Relacion.Nota_y_ValeColumn) = Global.System.Convert.DBNull
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Function IsClienteNull() As Boolean
'            Return Me.IsNull(Me.tableTlb_Relacion.ClienteColumn)
'        End Function

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Sub SetClienteNull()
'            Me(Me.tableTlb_Relacion.ClienteColumn) = Global.System.Convert.DBNull
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Function IsCompra_InicialNull() As Boolean
'            Return Me.IsNull(Me.tableTlb_Relacion.Compra_InicialColumn)
'        End Function

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Sub SetCompra_InicialNull()
'            Me(Me.tableTlb_Relacion.Compra_InicialColumn) = Global.System.Convert.DBNull
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Function IsSaldo_VencidoNull() As Boolean
'            Return Me.IsNull(Me.tableTlb_Relacion.Saldo_VencidoColumn)
'        End Function

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Sub SetSaldo_VencidoNull()
'            Me(Me.tableTlb_Relacion.Saldo_VencidoColumn) = Global.System.Convert.DBNull
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Function IsAbonos_x_cubrirNull() As Boolean
'            Return Me.IsNull(Me.tableTlb_Relacion.Abonos_x_cubrirColumn)
'        End Function

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Sub SetAbonos_x_cubrirNull()
'            Me(Me.tableTlb_Relacion.Abonos_x_cubrirColumn) = Global.System.Convert.DBNull
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Function IsAbono_CorteNull() As Boolean
'            Return Me.IsNull(Me.tableTlb_Relacion.Abono_CorteColumn)
'        End Function

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Sub SetAbono_CorteNull()
'            Me(Me.tableTlb_Relacion.Abono_CorteColumn) = Global.System.Convert.DBNull
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Function IsDescuento_x_aplicarNull() As Boolean
'            Return Me.IsNull(Me.tableTlb_Relacion.Descuento_x_aplicarColumn)
'        End Function

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Sub SetDescuento_x_aplicarNull()
'            Me(Me.tableTlb_Relacion.Descuento_x_aplicarColumn) = Global.System.Convert.DBNull
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Function IsSaldo_post_pagoNull() As Boolean
'            Return Me.IsNull(Me.tableTlb_Relacion.Saldo_post_pagoColumn)
'        End Function

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Sub SetSaldo_post_pagoNull()
'            Me(Me.tableTlb_Relacion.Saldo_post_pagoColumn) = Global.System.Convert.DBNull
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Function IsTipodisNull() As Boolean
'            Return Me.IsNull(Me.tableTlb_Relacion.TipodisColumn)
'        End Function

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Sub SetTipodisNull()
'            Me(Me.tableTlb_Relacion.TipodisColumn) = Global.System.Convert.DBNull
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Function IsNombreNull() As Boolean
'            Return Me.IsNull(Me.tableTlb_Relacion.NombreColumn)
'        End Function

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Sub SetNombreNull()
'            Me(Me.tableTlb_Relacion.NombreColumn) = Global.System.Convert.DBNull
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Function IsFrecuenciaNull() As Boolean
'            Return Me.IsNull(Me.tableTlb_Relacion.FrecuenciaColumn)
'        End Function

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Sub SetFrecuenciaNull()
'            Me(Me.tableTlb_Relacion.FrecuenciaColumn) = Global.System.Convert.DBNull
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Function IsDireccionNull() As Boolean
'            Return Me.IsNull(Me.tableTlb_Relacion.DireccionColumn)
'        End Function

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Sub SetDireccionNull()
'            Me(Me.tableTlb_Relacion.DireccionColumn) = Global.System.Convert.DBNull
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Function IsTelefonoNull() As Boolean
'            Return Me.IsNull(Me.tableTlb_Relacion.TelefonoColumn)
'        End Function

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Sub SetTelefonoNull()
'            Me(Me.tableTlb_Relacion.TelefonoColumn) = Global.System.Convert.DBNull
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Function IsLimtcredNull() As Boolean
'            Return Me.IsNull(Me.tableTlb_Relacion.LimtcredColumn)
'        End Function

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Sub SetLimtcredNull()
'            Me(Me.tableTlb_Relacion.LimtcredColumn) = Global.System.Convert.DBNull
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Function IsCobradorNull() As Boolean
'            Return Me.IsNull(Me.tableTlb_Relacion.CobradorColumn)
'        End Function

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Sub SetCobradorNull()
'            Me(Me.tableTlb_Relacion.CobradorColumn) = Global.System.Convert.DBNull
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Function IsSucursalNull() As Boolean
'            Return Me.IsNull(Me.tableTlb_Relacion.SucursalColumn)
'        End Function

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Sub SetSucursalNull()
'            Me(Me.tableTlb_Relacion.SucursalColumn) = Global.System.Convert.DBNull
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Function IsSaldoNull() As Boolean
'            Return Me.IsNull(Me.tableTlb_Relacion.SaldoColumn)
'        End Function

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Sub SetSaldoNull()
'            Me(Me.tableTlb_Relacion.SaldoColumn) = Global.System.Convert.DBNull
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Function IsContactoNull() As Boolean
'            Return Me.IsNull(Me.tableTlb_Relacion.ContactoColumn)
'        End Function

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Sub SetContactoNull()
'            Me(Me.tableTlb_Relacion.ContactoColumn) = Global.System.Convert.DBNull
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Function IsFolioNull() As Boolean
'            Return Me.IsNull(Me.tableTlb_Relacion.FolioColumn)
'        End Function

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Sub SetFolioNull()
'            Me(Me.tableTlb_Relacion.FolioColumn) = Global.System.Convert.DBNull
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Function IsFechaNull() As Boolean
'            Return Me.IsNull(Me.tableTlb_Relacion.FechaColumn)
'        End Function

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Sub SetFechaNull()
'            Me(Me.tableTlb_Relacion.FechaColumn) = Global.System.Convert.DBNull
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Function IsVenceNull() As Boolean
'            Return Me.IsNull(Me.tableTlb_Relacion.VenceColumn)
'        End Function

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Sub SetVenceNull()
'            Me(Me.tableTlb_Relacion.VenceColumn) = Global.System.Convert.DBNull
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Function IsDisponibleNull() As Boolean
'            Return Me.IsNull(Me.tableTlb_Relacion.DisponibleColumn)
'        End Function

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Sub SetDisponibleNull()
'            Me(Me.tableTlb_Relacion.DisponibleColumn) = Global.System.Convert.DBNull
'        End Sub
'    End Class

'    '''<summary>
'    '''Represents strongly named DataRow class.
'    '''</summary>
'    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
'    Partial Public Class Tlb_menspagaRow
'        Inherits Global.System.Data.DataRow

'        Private tableTlb_menspaga As Tlb_menspagaDataTable

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
'            MyBase.New(rb)
'            Me.tableTlb_menspaga = CType(Me.Table,Tlb_menspagaDataTable)
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Property RegistroR1() As String
'            Get
'                Try 
'                    Return CType(Me(Me.tableTlb_menspaga.RegistroR1Column),String)
'                Catch e As Global.System.InvalidCastException
'                    Throw New Global.System.Data.StrongTypingException("The value for column 'RegistroR1' in table 'Tlb_menspaga' is DBNull.", e)
'                End Try
'            End Get
'            Set
'                Me(Me.tableTlb_menspaga.RegistroR1Column) = value
'            End Set
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Property RegistroR2() As String
'            Get
'                Try 
'                    Return CType(Me(Me.tableTlb_menspaga.RegistroR2Column),String)
'                Catch e As Global.System.InvalidCastException
'                    Throw New Global.System.Data.StrongTypingException("The value for column 'RegistroR2' in table 'Tlb_menspaga' is DBNull.", e)
'                End Try
'            End Get
'            Set
'                Me(Me.tableTlb_menspaga.RegistroR2Column) = value
'            End Set
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Property RegistroR3() As String
'            Get
'                Try 
'                    Return CType(Me(Me.tableTlb_menspaga.RegistroR3Column),String)
'                Catch e As Global.System.InvalidCastException
'                    Throw New Global.System.Data.StrongTypingException("The value for column 'RegistroR3' in table 'Tlb_menspaga' is DBNull.", e)
'                End Try
'            End Get
'            Set
'                Me(Me.tableTlb_menspaga.RegistroR3Column) = value
'            End Set
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Property RegistroR4() As String
'            Get
'                Try 
'                    Return CType(Me(Me.tableTlb_menspaga.RegistroR4Column),String)
'                Catch e As Global.System.InvalidCastException
'                    Throw New Global.System.Data.StrongTypingException("The value for column 'RegistroR4' in table 'Tlb_menspaga' is DBNull.", e)
'                End Try
'            End Get
'            Set
'                Me(Me.tableTlb_menspaga.RegistroR4Column) = value
'            End Set
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Function IsRegistroR1Null() As Boolean
'            Return Me.IsNull(Me.tableTlb_menspaga.RegistroR1Column)
'        End Function

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Sub SetRegistroR1Null()
'            Me(Me.tableTlb_menspaga.RegistroR1Column) = Global.System.Convert.DBNull
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Function IsRegistroR2Null() As Boolean
'            Return Me.IsNull(Me.tableTlb_menspaga.RegistroR2Column)
'        End Function

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Sub SetRegistroR2Null()
'            Me(Me.tableTlb_menspaga.RegistroR2Column) = Global.System.Convert.DBNull
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Function IsRegistroR3Null() As Boolean
'            Return Me.IsNull(Me.tableTlb_menspaga.RegistroR3Column)
'        End Function

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Sub SetRegistroR3Null()
'            Me(Me.tableTlb_menspaga.RegistroR3Column) = Global.System.Convert.DBNull
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Function IsRegistroR4Null() As Boolean
'            Return Me.IsNull(Me.tableTlb_menspaga.RegistroR4Column)
'        End Function

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Sub SetRegistroR4Null()
'            Me(Me.tableTlb_menspaga.RegistroR4Column) = Global.System.Convert.DBNull
'        End Sub
'    End Class

'    '''<summary>
'    '''Row event argument class
'    '''</summary>
'    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
'    Public Class Tlb_RelacionRowChangeEvent
'        Inherits Global.System.EventArgs

'        Private eventRow As Tlb_RelacionRow

'        Private eventAction As Global.System.Data.DataRowAction

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Sub New(ByVal row As Tlb_RelacionRow, ByVal action As Global.System.Data.DataRowAction)
'            MyBase.New
'            Me.eventRow = row
'            Me.eventAction = action
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public ReadOnly Property Row() As Tlb_RelacionRow
'            Get
'                Return Me.eventRow
'            End Get
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
'            Get
'                Return Me.eventAction
'            End Get
'        End Property
'    End Class

'    '''<summary>
'    '''Row event argument class
'    '''</summary>
'    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
'    Public Class Tlb_menspagaRowChangeEvent
'        Inherits Global.System.EventArgs

'        Private eventRow As Tlb_menspagaRow

'        Private eventAction As Global.System.Data.DataRowAction

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public Sub New(ByVal row As Tlb_menspagaRow, ByVal action As Global.System.Data.DataRowAction)
'            MyBase.New
'            Me.eventRow = row
'            Me.eventAction = action
'        End Sub

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public ReadOnly Property Row() As Tlb_menspagaRow
'            Get
'                Return Me.eventRow
'            End Get
'        End Property

'        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
'        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
'            Get
'                Return Me.eventAction
'            End Get
'        End Property
'    End Class
'End Class
