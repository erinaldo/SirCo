'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.1433
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("ReportDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class ReportDataSet
    Inherits Global.System.Data.DataSet
    
    Private tableusp_RptNominaBonos1 As usp_RptNominaBonos1DataTable
    
    Private tabletbl_Patient As tbl_PatientDataTable
    
    Private tabletbl_asistencia As tbl_asistenciaDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("usp_RptNominaBonos1")) Is Nothing) Then
                MyBase.Tables.Add(New usp_RptNominaBonos1DataTable(ds.Tables("usp_RptNominaBonos1")))
            End If
            If (Not (ds.Tables("tbl_Patient")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_PatientDataTable(ds.Tables("tbl_Patient")))
            End If
            If (Not (ds.Tables("tbl_asistencia")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_asistenciaDataTable(ds.Tables("tbl_asistencia")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property usp_RptNominaBonos1() As usp_RptNominaBonos1DataTable
        Get
            Return Me.tableusp_RptNominaBonos1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_Patient() As tbl_PatientDataTable
        Get
            Return Me.tabletbl_Patient
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_asistencia() As tbl_asistenciaDataTable
        Get
            Return Me.tabletbl_asistencia
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As ReportDataSet = CType(MyBase.Clone,ReportDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("usp_RptNominaBonos1")) Is Nothing) Then
                MyBase.Tables.Add(New usp_RptNominaBonos1DataTable(ds.Tables("usp_RptNominaBonos1")))
            End If
            If (Not (ds.Tables("tbl_Patient")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_PatientDataTable(ds.Tables("tbl_Patient")))
            End If
            If (Not (ds.Tables("tbl_asistencia")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_asistenciaDataTable(ds.Tables("tbl_asistencia")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableusp_RptNominaBonos1 = CType(MyBase.Tables("usp_RptNominaBonos1"),usp_RptNominaBonos1DataTable)
        If (initTable = true) Then
            If (Not (Me.tableusp_RptNominaBonos1) Is Nothing) Then
                Me.tableusp_RptNominaBonos1.InitVars
            End If
        End If
        Me.tabletbl_Patient = CType(MyBase.Tables("tbl_Patient"),tbl_PatientDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletbl_Patient) Is Nothing) Then
                Me.tabletbl_Patient.InitVars
            End If
        End If
        Me.tabletbl_asistencia = CType(MyBase.Tables("tbl_asistencia"),tbl_asistenciaDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletbl_asistencia) Is Nothing) Then
                Me.tabletbl_asistencia.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "ReportDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/ReportDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableusp_RptNominaBonos1 = New usp_RptNominaBonos1DataTable
        MyBase.Tables.Add(Me.tableusp_RptNominaBonos1)
        Me.tabletbl_Patient = New tbl_PatientDataTable
        MyBase.Tables.Add(Me.tabletbl_Patient)
        Me.tabletbl_asistencia = New tbl_asistenciaDataTable
        MyBase.Tables.Add(Me.tabletbl_asistencia)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeusp_RptNominaBonos1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializetbl_Patient() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializetbl_asistencia() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As ReportDataSet = New ReportDataSet
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub usp_RptNominaBonos1RowChangeEventHandler(ByVal sender As Object, ByVal e As usp_RptNominaBonos1RowChangeEvent)
    
    Public Delegate Sub tbl_PatientRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_PatientRowChangeEvent)
    
    Public Delegate Sub tbl_asistenciaRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_asistenciaRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class usp_RptNominaBonos1DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnfecha_ini As Global.System.Data.DataColumn
        
        Private columnfecha_fin As Global.System.Data.DataColumn
        
        Private columnsection_name As Global.System.Data.DataColumn
        
        Private columnempleado_name As Global.System.Data.DataColumn
        
        Private columnpuesto_name As Global.System.Data.DataColumn
        
        Private columnColumn1 As Global.System.Data.DataColumn
        
        Private columnprima_dom As Global.System.Data.DataColumn
        
        Private columnbono_pun As Global.System.Data.DataColumn
        
        Private columnbono_asi As Global.System.Data.DataColumn
        
        Private columnhrs_extras As Global.System.Data.DataColumn
        
        Private columndesc_trab As Global.System.Data.DataColumn
        
        Private columndia_fest As Global.System.Data.DataColumn
        
        Private columnbono_men As Global.System.Data.DataColumn
        
        Private columnbono_des As Global.System.Data.DataColumn
        
        Private columnbono_fijo As Global.System.Data.DataColumn
        
        Private columntotal_bonos As Global.System.Data.DataColumn
        
        Private columntotal_pagos As Global.System.Data.DataColumn
        
        Private columntotal As Global.System.Data.DataColumn
        
        Private columnestatus As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "usp_RptNominaBonos1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fecha_iniColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfecha_ini
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fecha_finColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfecha_fin
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property section_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsection_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property empleado_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnempleado_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property puesto_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpuesto_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property prima_domColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprima_dom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property bono_punColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbono_pun
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property bono_asiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbono_asi
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property hrs_extrasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhrs_extras
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property desc_trabColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndesc_trab
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dia_festColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndia_fest
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property bono_menColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbono_men
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property bono_desColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbono_des
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property bono_fijoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbono_fijo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property total_bonosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntotal_bonos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property total_pagosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntotal_pagos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property totalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property estatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnestatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As usp_RptNominaBonos1Row
            Get
                Return CType(Me.Rows(index),usp_RptNominaBonos1Row)
            End Get
        End Property
        
        Public Event usp_RptNominaBonos1RowChanging As usp_RptNominaBonos1RowChangeEventHandler
        
        Public Event usp_RptNominaBonos1RowChanged As usp_RptNominaBonos1RowChangeEventHandler
        
        Public Event usp_RptNominaBonos1RowDeleting As usp_RptNominaBonos1RowChangeEventHandler
        
        Public Event usp_RptNominaBonos1RowDeleted As usp_RptNominaBonos1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addusp_RptNominaBonos1Row(ByVal row As usp_RptNominaBonos1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addusp_RptNominaBonos1Row( _
                    ByVal fecha_ini As Date,  _
                    ByVal fecha_fin As Date,  _
                    ByVal section_name As String,  _
                    ByVal empleado_name As String,  _
                    ByVal puesto_name As String,  _
                    ByVal Column1 As Decimal,  _
                    ByVal prima_dom As Decimal,  _
                    ByVal bono_pun As Decimal,  _
                    ByVal bono_asi As Decimal,  _
                    ByVal hrs_extras As Decimal,  _
                    ByVal desc_trab As Decimal,  _
                    ByVal dia_fest As Decimal,  _
                    ByVal bono_men As Decimal,  _
                    ByVal bono_des As Decimal,  _
                    ByVal bono_fijo As Decimal,  _
                    ByVal total_bonos As Decimal,  _
                    ByVal total_pagos As Decimal,  _
                    ByVal total As Decimal,  _
                    ByVal estatus As String) As usp_RptNominaBonos1Row
            Dim rowusp_RptNominaBonos1Row As usp_RptNominaBonos1Row = CType(Me.NewRow,usp_RptNominaBonos1Row)
            Dim columnValuesArray() As Object = New Object() {fecha_ini, fecha_fin, section_name, empleado_name, puesto_name, Column1, prima_dom, bono_pun, bono_asi, hrs_extras, desc_trab, dia_fest, bono_men, bono_des, bono_fijo, total_bonos, total_pagos, total, estatus}
            rowusp_RptNominaBonos1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowusp_RptNominaBonos1Row)
            Return rowusp_RptNominaBonos1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As usp_RptNominaBonos1DataTable = CType(MyBase.Clone,usp_RptNominaBonos1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New usp_RptNominaBonos1DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnfecha_ini = MyBase.Columns("fecha_ini")
            Me.columnfecha_fin = MyBase.Columns("fecha_fin")
            Me.columnsection_name = MyBase.Columns("section_name")
            Me.columnempleado_name = MyBase.Columns("empleado_name")
            Me.columnpuesto_name = MyBase.Columns("puesto_name")
            Me.columnColumn1 = MyBase.Columns("Column1")
            Me.columnprima_dom = MyBase.Columns("prima_dom")
            Me.columnbono_pun = MyBase.Columns("bono_pun")
            Me.columnbono_asi = MyBase.Columns("bono_asi")
            Me.columnhrs_extras = MyBase.Columns("hrs_extras")
            Me.columndesc_trab = MyBase.Columns("desc_trab")
            Me.columndia_fest = MyBase.Columns("dia_fest")
            Me.columnbono_men = MyBase.Columns("bono_men")
            Me.columnbono_des = MyBase.Columns("bono_des")
            Me.columnbono_fijo = MyBase.Columns("bono_fijo")
            Me.columntotal_bonos = MyBase.Columns("total_bonos")
            Me.columntotal_pagos = MyBase.Columns("total_pagos")
            Me.columntotal = MyBase.Columns("total")
            Me.columnestatus = MyBase.Columns("estatus")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnfecha_ini = New Global.System.Data.DataColumn("fecha_ini", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfecha_ini)
            Me.columnfecha_fin = New Global.System.Data.DataColumn("fecha_fin", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfecha_fin)
            Me.columnsection_name = New Global.System.Data.DataColumn("section_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsection_name)
            Me.columnempleado_name = New Global.System.Data.DataColumn("empleado_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnempleado_name)
            Me.columnpuesto_name = New Global.System.Data.DataColumn("puesto_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpuesto_name)
            Me.columnColumn1 = New Global.System.Data.DataColumn("Column1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn1)
            Me.columnprima_dom = New Global.System.Data.DataColumn("prima_dom", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprima_dom)
            Me.columnbono_pun = New Global.System.Data.DataColumn("bono_pun", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbono_pun)
            Me.columnbono_asi = New Global.System.Data.DataColumn("bono_asi", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbono_asi)
            Me.columnhrs_extras = New Global.System.Data.DataColumn("hrs_extras", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhrs_extras)
            Me.columndesc_trab = New Global.System.Data.DataColumn("desc_trab", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndesc_trab)
            Me.columndia_fest = New Global.System.Data.DataColumn("dia_fest", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndia_fest)
            Me.columnbono_men = New Global.System.Data.DataColumn("bono_men", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbono_men)
            Me.columnbono_des = New Global.System.Data.DataColumn("bono_des", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbono_des)
            Me.columnbono_fijo = New Global.System.Data.DataColumn("bono_fijo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbono_fijo)
            Me.columntotal_bonos = New Global.System.Data.DataColumn("total_bonos", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotal_bonos)
            Me.columntotal_pagos = New Global.System.Data.DataColumn("total_pagos", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotal_pagos)
            Me.columntotal = New Global.System.Data.DataColumn("total", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotal)
            Me.columnestatus = New Global.System.Data.DataColumn("estatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnestatus)
            Me.columnfecha_ini.AllowDBNull = false
            Me.columnfecha_fin.AllowDBNull = false
            Me.columnsection_name.MaxLength = 50
            Me.columnempleado_name.MaxLength = 50
            Me.columnpuesto_name.MaxLength = 50
            Me.columnColumn1.ReadOnly = true
            Me.columnprima_dom.ReadOnly = true
            Me.columnbono_pun.ReadOnly = true
            Me.columnbono_asi.ReadOnly = true
            Me.columnhrs_extras.ReadOnly = true
            Me.columndesc_trab.ReadOnly = true
            Me.columndia_fest.ReadOnly = true
            Me.columnbono_men.ReadOnly = true
            Me.columnbono_des.ReadOnly = true
            Me.columnbono_fijo.ReadOnly = true
            Me.columntotal_bonos.ReadOnly = true
            Me.columntotal_pagos.ReadOnly = true
            Me.columntotal.ReadOnly = true
            Me.columnestatus.MaxLength = 1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newusp_RptNominaBonos1Row() As usp_RptNominaBonos1Row
            Return CType(Me.NewRow,usp_RptNominaBonos1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New usp_RptNominaBonos1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(usp_RptNominaBonos1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.usp_RptNominaBonos1RowChangedEvent) Is Nothing) Then
                RaiseEvent usp_RptNominaBonos1RowChanged(Me, New usp_RptNominaBonos1RowChangeEvent(CType(e.Row,usp_RptNominaBonos1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.usp_RptNominaBonos1RowChangingEvent) Is Nothing) Then
                RaiseEvent usp_RptNominaBonos1RowChanging(Me, New usp_RptNominaBonos1RowChangeEvent(CType(e.Row,usp_RptNominaBonos1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.usp_RptNominaBonos1RowDeletedEvent) Is Nothing) Then
                RaiseEvent usp_RptNominaBonos1RowDeleted(Me, New usp_RptNominaBonos1RowChangeEvent(CType(e.Row,usp_RptNominaBonos1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.usp_RptNominaBonos1RowDeletingEvent) Is Nothing) Then
                RaiseEvent usp_RptNominaBonos1RowDeleting(Me, New usp_RptNominaBonos1RowChangeEvent(CType(e.Row,usp_RptNominaBonos1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removeusp_RptNominaBonos1Row(ByVal row As usp_RptNominaBonos1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As ReportDataSet = New ReportDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "usp_RptNominaBonos1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tbl_PatientDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnEmpleado_ID As Global.System.Data.DataColumn
        
        Private columnEmpleado_Name As Global.System.Data.DataColumn
        
        Private columnNRCNo As Global.System.Data.DataColumn
        
        Private columnAddress As Global.System.Data.DataColumn
        
        Private columnDOB As Global.System.Data.DataColumn
        
        Private columnPhone_R As Global.System.Data.DataColumn
        
        Private columnPhone_O As Global.System.Data.DataColumn
        
        Private columnPhone_HP As Global.System.Data.DataColumn
        
        Private columnMaritalStatus As Global.System.Data.DataColumn
        
        Private columnBloodGroup As Global.System.Data.DataColumn
        
        Private columnContactPhone As Global.System.Data.DataColumn
        
        Private columnRemark As Global.System.Data.DataColumn
        
        Private columnPicName As Global.System.Data.DataColumn
        
        Private columnSection_Name As Global.System.Data.DataColumn
        
        Private columnPuesto_Name As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tbl_Patient"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Empleado_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmpleado_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Empleado_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmpleado_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NRCNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNRCNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DOBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Phone_RColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPhone_R
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Phone_OColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPhone_O
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Phone_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPhone_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MaritalStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaritalStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BloodGroupColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBloodGroup
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ContactPhoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContactPhone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RemarkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemark
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PicNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPicName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Section_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSection_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Puesto_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPuesto_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_PatientRow
            Get
                Return CType(Me.Rows(index),tbl_PatientRow)
            End Get
        End Property
        
        Public Event tbl_PatientRowChanging As tbl_PatientRowChangeEventHandler
        
        Public Event tbl_PatientRowChanged As tbl_PatientRowChangeEventHandler
        
        Public Event tbl_PatientRowDeleting As tbl_PatientRowChangeEventHandler
        
        Public Event tbl_PatientRowDeleted As tbl_PatientRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addtbl_PatientRow(ByVal row As tbl_PatientRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addtbl_PatientRow(ByVal Empleado_ID As Integer, ByVal Empleado_Name As String, ByVal NRCNo As String, ByVal Address As String, ByVal DOB As Date, ByVal Phone_R As String, ByVal Phone_O As String, ByVal Phone_HP As String, ByVal MaritalStatus As Byte, ByVal BloodGroup As Byte, ByVal ContactPhone As String, ByVal Remark As String, ByVal PicName As String, ByVal Section_Name As String, ByVal Puesto_Name As String) As tbl_PatientRow
            Dim rowtbl_PatientRow As tbl_PatientRow = CType(Me.NewRow,tbl_PatientRow)
            Dim columnValuesArray() As Object = New Object() {Empleado_ID, Empleado_Name, NRCNo, Address, DOB, Phone_R, Phone_O, Phone_HP, MaritalStatus, BloodGroup, ContactPhone, Remark, PicName, Section_Name, Puesto_Name}
            rowtbl_PatientRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtbl_PatientRow)
            Return rowtbl_PatientRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByEmpleado_ID(ByVal Empleado_ID As Integer) As tbl_PatientRow
            Return CType(Me.Rows.Find(New Object() {Empleado_ID}),tbl_PatientRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tbl_PatientDataTable = CType(MyBase.Clone,tbl_PatientDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tbl_PatientDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnEmpleado_ID = MyBase.Columns("Empleado_ID")
            Me.columnEmpleado_Name = MyBase.Columns("Empleado_Name")
            Me.columnNRCNo = MyBase.Columns("NRCNo")
            Me.columnAddress = MyBase.Columns("Address")
            Me.columnDOB = MyBase.Columns("DOB")
            Me.columnPhone_R = MyBase.Columns("Phone_R")
            Me.columnPhone_O = MyBase.Columns("Phone_O")
            Me.columnPhone_HP = MyBase.Columns("Phone_HP")
            Me.columnMaritalStatus = MyBase.Columns("MaritalStatus")
            Me.columnBloodGroup = MyBase.Columns("BloodGroup")
            Me.columnContactPhone = MyBase.Columns("ContactPhone")
            Me.columnRemark = MyBase.Columns("Remark")
            Me.columnPicName = MyBase.Columns("PicName")
            Me.columnSection_Name = MyBase.Columns("Section_Name")
            Me.columnPuesto_Name = MyBase.Columns("Puesto_Name")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnEmpleado_ID = New Global.System.Data.DataColumn("Empleado_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmpleado_ID)
            Me.columnEmpleado_Name = New Global.System.Data.DataColumn("Empleado_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmpleado_Name)
            Me.columnNRCNo = New Global.System.Data.DataColumn("NRCNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNRCNo)
            Me.columnAddress = New Global.System.Data.DataColumn("Address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddress)
            Me.columnDOB = New Global.System.Data.DataColumn("DOB", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOB)
            Me.columnPhone_R = New Global.System.Data.DataColumn("Phone_R", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPhone_R)
            Me.columnPhone_O = New Global.System.Data.DataColumn("Phone_O", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPhone_O)
            Me.columnPhone_HP = New Global.System.Data.DataColumn("Phone_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPhone_HP)
            Me.columnMaritalStatus = New Global.System.Data.DataColumn("MaritalStatus", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaritalStatus)
            Me.columnBloodGroup = New Global.System.Data.DataColumn("BloodGroup", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBloodGroup)
            Me.columnContactPhone = New Global.System.Data.DataColumn("ContactPhone", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContactPhone)
            Me.columnRemark = New Global.System.Data.DataColumn("Remark", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemark)
            Me.columnPicName = New Global.System.Data.DataColumn("PicName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPicName)
            Me.columnSection_Name = New Global.System.Data.DataColumn("Section_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSection_Name)
            Me.columnPuesto_Name = New Global.System.Data.DataColumn("Puesto_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPuesto_Name)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnEmpleado_ID}, true))
            Me.columnEmpleado_ID.AllowDBNull = false
            Me.columnEmpleado_ID.Unique = true
            Me.columnEmpleado_Name.MaxLength = 50
            Me.columnNRCNo.MaxLength = 50
            Me.columnAddress.MaxLength = 536870910
            Me.columnPhone_R.MaxLength = 20
            Me.columnPhone_O.MaxLength = 20
            Me.columnPhone_HP.MaxLength = 20
            Me.columnContactPhone.MaxLength = 20
            Me.columnRemark.MaxLength = 250
            Me.columnPicName.MaxLength = 10
            Me.columnSection_Name.Caption = "Section_ID"
            Me.columnSection_Name.MaxLength = 50
            Me.columnPuesto_Name.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newtbl_PatientRow() As tbl_PatientRow
            Return CType(Me.NewRow,tbl_PatientRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tbl_PatientRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tbl_PatientRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_PatientRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_PatientRowChanged(Me, New tbl_PatientRowChangeEvent(CType(e.Row,tbl_PatientRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_PatientRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_PatientRowChanging(Me, New tbl_PatientRowChangeEvent(CType(e.Row,tbl_PatientRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_PatientRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_PatientRowDeleted(Me, New tbl_PatientRowChangeEvent(CType(e.Row,tbl_PatientRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_PatientRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_PatientRowDeleting(Me, New tbl_PatientRowChangeEvent(CType(e.Row,tbl_PatientRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removetbl_PatientRow(ByVal row As tbl_PatientRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As ReportDataSet = New ReportDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tbl_PatientDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tbl_asistenciaDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnfecha As Global.System.Data.DataColumn
        
        Private columndepartamento As Global.System.Data.DataColumn
        
        Private columnemp As Global.System.Data.DataColumn
        
        Private columnnombre As Global.System.Data.DataColumn
        
        Private columnregistro1 As Global.System.Data.DataColumn
        
        Private columnregistro2 As Global.System.Data.DataColumn
        
        Private columnregistro3 As Global.System.Data.DataColumn
        
        Private columnregistro4 As Global.System.Data.DataColumn
        
        Private columnregistro5 As Global.System.Data.DataColumn
        
        Private columnregistro6 As Global.System.Data.DataColumn
        
        Private columnregistro7 As Global.System.Data.DataColumn
        
        Private columnregistro8 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tbl_asistencia"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fechaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfecha
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property departamentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndepartamento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property empColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnemp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nombreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property registro1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnregistro1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property registro2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnregistro2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property registro3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnregistro3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property registro4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnregistro4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property registro5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnregistro5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property registro6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnregistro6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property registro7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnregistro7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property registro8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnregistro8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_asistenciaRow
            Get
                Return CType(Me.Rows(index),tbl_asistenciaRow)
            End Get
        End Property
        
        Public Event tbl_asistenciaRowChanging As tbl_asistenciaRowChangeEventHandler
        
        Public Event tbl_asistenciaRowChanged As tbl_asistenciaRowChangeEventHandler
        
        Public Event tbl_asistenciaRowDeleting As tbl_asistenciaRowChangeEventHandler
        
        Public Event tbl_asistenciaRowDeleted As tbl_asistenciaRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addtbl_asistenciaRow(ByVal row As tbl_asistenciaRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addtbl_asistenciaRow(ByVal fecha As Date, ByVal departamento As String, ByVal emp As String, ByVal nombre As String, ByVal registro1 As String, ByVal registro2 As String, ByVal registro3 As String, ByVal registro4 As String, ByVal registro5 As String, ByVal registro6 As String, ByVal registro7 As String, ByVal registro8 As String) As tbl_asistenciaRow
            Dim rowtbl_asistenciaRow As tbl_asistenciaRow = CType(Me.NewRow,tbl_asistenciaRow)
            Dim columnValuesArray() As Object = New Object() {fecha, departamento, emp, nombre, registro1, registro2, registro3, registro4, registro5, registro6, registro7, registro8}
            rowtbl_asistenciaRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtbl_asistenciaRow)
            Return rowtbl_asistenciaRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tbl_asistenciaDataTable = CType(MyBase.Clone,tbl_asistenciaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tbl_asistenciaDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnfecha = MyBase.Columns("fecha")
            Me.columndepartamento = MyBase.Columns("departamento")
            Me.columnemp = MyBase.Columns("emp")
            Me.columnnombre = MyBase.Columns("nombre")
            Me.columnregistro1 = MyBase.Columns("registro1")
            Me.columnregistro2 = MyBase.Columns("registro2")
            Me.columnregistro3 = MyBase.Columns("registro3")
            Me.columnregistro4 = MyBase.Columns("registro4")
            Me.columnregistro5 = MyBase.Columns("registro5")
            Me.columnregistro6 = MyBase.Columns("registro6")
            Me.columnregistro7 = MyBase.Columns("registro7")
            Me.columnregistro8 = MyBase.Columns("registro8")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnfecha = New Global.System.Data.DataColumn("fecha", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfecha)
            Me.columndepartamento = New Global.System.Data.DataColumn("departamento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndepartamento)
            Me.columnemp = New Global.System.Data.DataColumn("emp", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnemp)
            Me.columnnombre = New Global.System.Data.DataColumn("nombre", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre)
            Me.columnregistro1 = New Global.System.Data.DataColumn("registro1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnregistro1)
            Me.columnregistro2 = New Global.System.Data.DataColumn("registro2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnregistro2)
            Me.columnregistro3 = New Global.System.Data.DataColumn("registro3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnregistro3)
            Me.columnregistro4 = New Global.System.Data.DataColumn("registro4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnregistro4)
            Me.columnregistro5 = New Global.System.Data.DataColumn("registro5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnregistro5)
            Me.columnregistro6 = New Global.System.Data.DataColumn("registro6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnregistro6)
            Me.columnregistro7 = New Global.System.Data.DataColumn("registro7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnregistro7)
            Me.columnregistro8 = New Global.System.Data.DataColumn("registro8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnregistro8)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newtbl_asistenciaRow() As tbl_asistenciaRow
            Return CType(Me.NewRow,tbl_asistenciaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tbl_asistenciaRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tbl_asistenciaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_asistenciaRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_asistenciaRowChanged(Me, New tbl_asistenciaRowChangeEvent(CType(e.Row,tbl_asistenciaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_asistenciaRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_asistenciaRowChanging(Me, New tbl_asistenciaRowChangeEvent(CType(e.Row,tbl_asistenciaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_asistenciaRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_asistenciaRowDeleted(Me, New tbl_asistenciaRowChangeEvent(CType(e.Row,tbl_asistenciaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_asistenciaRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_asistenciaRowDeleting(Me, New tbl_asistenciaRowChangeEvent(CType(e.Row,tbl_asistenciaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removetbl_asistenciaRow(ByVal row As tbl_asistenciaRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As ReportDataSet = New ReportDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tbl_asistenciaDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class usp_RptNominaBonos1Row
        Inherits Global.System.Data.DataRow
        
        Private tableusp_RptNominaBonos1 As usp_RptNominaBonos1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableusp_RptNominaBonos1 = CType(Me.Table,usp_RptNominaBonos1DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fecha_ini() As Date
            Get
                Return CType(Me(Me.tableusp_RptNominaBonos1.fecha_iniColumn),Date)
            End Get
            Set
                Me(Me.tableusp_RptNominaBonos1.fecha_iniColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fecha_fin() As Date
            Get
                Return CType(Me(Me.tableusp_RptNominaBonos1.fecha_finColumn),Date)
            End Get
            Set
                Me(Me.tableusp_RptNominaBonos1.fecha_finColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property section_name() As String
            Get
                Try 
                    Return CType(Me(Me.tableusp_RptNominaBonos1.section_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'section_name' in table 'usp_RptNominaBonos1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_RptNominaBonos1.section_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property empleado_name() As String
            Get
                Try 
                    Return CType(Me(Me.tableusp_RptNominaBonos1.empleado_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'empleado_name' in table 'usp_RptNominaBonos1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_RptNominaBonos1.empleado_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property puesto_name() As String
            Get
                Try 
                    Return CType(Me(Me.tableusp_RptNominaBonos1.puesto_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'puesto_name' in table 'usp_RptNominaBonos1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_RptNominaBonos1.puesto_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableusp_RptNominaBonos1.Column1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Column1' in table 'usp_RptNominaBonos1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_RptNominaBonos1.Column1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property prima_dom() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableusp_RptNominaBonos1.prima_domColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'prima_dom' in table 'usp_RptNominaBonos1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_RptNominaBonos1.prima_domColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property bono_pun() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableusp_RptNominaBonos1.bono_punColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'bono_pun' in table 'usp_RptNominaBonos1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_RptNominaBonos1.bono_punColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property bono_asi() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableusp_RptNominaBonos1.bono_asiColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'bono_asi' in table 'usp_RptNominaBonos1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_RptNominaBonos1.bono_asiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property hrs_extras() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableusp_RptNominaBonos1.hrs_extrasColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'hrs_extras' in table 'usp_RptNominaBonos1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_RptNominaBonos1.hrs_extrasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property desc_trab() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableusp_RptNominaBonos1.desc_trabColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'desc_trab' in table 'usp_RptNominaBonos1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_RptNominaBonos1.desc_trabColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dia_fest() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableusp_RptNominaBonos1.dia_festColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dia_fest' in table 'usp_RptNominaBonos1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_RptNominaBonos1.dia_festColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property bono_men() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableusp_RptNominaBonos1.bono_menColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'bono_men' in table 'usp_RptNominaBonos1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_RptNominaBonos1.bono_menColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property bono_des() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableusp_RptNominaBonos1.bono_desColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'bono_des' in table 'usp_RptNominaBonos1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_RptNominaBonos1.bono_desColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property bono_fijo() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableusp_RptNominaBonos1.bono_fijoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'bono_fijo' in table 'usp_RptNominaBonos1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_RptNominaBonos1.bono_fijoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property total_bonos() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableusp_RptNominaBonos1.total_bonosColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'total_bonos' in table 'usp_RptNominaBonos1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_RptNominaBonos1.total_bonosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property total_pagos() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableusp_RptNominaBonos1.total_pagosColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'total_pagos' in table 'usp_RptNominaBonos1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_RptNominaBonos1.total_pagosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property total() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableusp_RptNominaBonos1.totalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'total' in table 'usp_RptNominaBonos1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_RptNominaBonos1.totalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property estatus() As String
            Get
                Try 
                    Return CType(Me(Me.tableusp_RptNominaBonos1.estatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'estatus' in table 'usp_RptNominaBonos1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableusp_RptNominaBonos1.estatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issection_nameNull() As Boolean
            Return Me.IsNull(Me.tableusp_RptNominaBonos1.section_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsection_nameNull()
            Me(Me.tableusp_RptNominaBonos1.section_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isempleado_nameNull() As Boolean
            Return Me.IsNull(Me.tableusp_RptNominaBonos1.empleado_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setempleado_nameNull()
            Me(Me.tableusp_RptNominaBonos1.empleado_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispuesto_nameNull() As Boolean
            Return Me.IsNull(Me.tableusp_RptNominaBonos1.puesto_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpuesto_nameNull()
            Me(Me.tableusp_RptNominaBonos1.puesto_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn1Null() As Boolean
            Return Me.IsNull(Me.tableusp_RptNominaBonos1.Column1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn1Null()
            Me(Me.tableusp_RptNominaBonos1.Column1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isprima_domNull() As Boolean
            Return Me.IsNull(Me.tableusp_RptNominaBonos1.prima_domColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setprima_domNull()
            Me(Me.tableusp_RptNominaBonos1.prima_domColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isbono_punNull() As Boolean
            Return Me.IsNull(Me.tableusp_RptNominaBonos1.bono_punColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setbono_punNull()
            Me(Me.tableusp_RptNominaBonos1.bono_punColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isbono_asiNull() As Boolean
            Return Me.IsNull(Me.tableusp_RptNominaBonos1.bono_asiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setbono_asiNull()
            Me(Me.tableusp_RptNominaBonos1.bono_asiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ishrs_extrasNull() As Boolean
            Return Me.IsNull(Me.tableusp_RptNominaBonos1.hrs_extrasColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sethrs_extrasNull()
            Me(Me.tableusp_RptNominaBonos1.hrs_extrasColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdesc_trabNull() As Boolean
            Return Me.IsNull(Me.tableusp_RptNominaBonos1.desc_trabColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdesc_trabNull()
            Me(Me.tableusp_RptNominaBonos1.desc_trabColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdia_festNull() As Boolean
            Return Me.IsNull(Me.tableusp_RptNominaBonos1.dia_festColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdia_festNull()
            Me(Me.tableusp_RptNominaBonos1.dia_festColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isbono_menNull() As Boolean
            Return Me.IsNull(Me.tableusp_RptNominaBonos1.bono_menColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setbono_menNull()
            Me(Me.tableusp_RptNominaBonos1.bono_menColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isbono_desNull() As Boolean
            Return Me.IsNull(Me.tableusp_RptNominaBonos1.bono_desColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setbono_desNull()
            Me(Me.tableusp_RptNominaBonos1.bono_desColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isbono_fijoNull() As Boolean
            Return Me.IsNull(Me.tableusp_RptNominaBonos1.bono_fijoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setbono_fijoNull()
            Me(Me.tableusp_RptNominaBonos1.bono_fijoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Istotal_bonosNull() As Boolean
            Return Me.IsNull(Me.tableusp_RptNominaBonos1.total_bonosColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Settotal_bonosNull()
            Me(Me.tableusp_RptNominaBonos1.total_bonosColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Istotal_pagosNull() As Boolean
            Return Me.IsNull(Me.tableusp_RptNominaBonos1.total_pagosColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Settotal_pagosNull()
            Me(Me.tableusp_RptNominaBonos1.total_pagosColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IstotalNull() As Boolean
            Return Me.IsNull(Me.tableusp_RptNominaBonos1.totalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SettotalNull()
            Me(Me.tableusp_RptNominaBonos1.totalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsestatusNull() As Boolean
            Return Me.IsNull(Me.tableusp_RptNominaBonos1.estatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetestatusNull()
            Me(Me.tableusp_RptNominaBonos1.estatusColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class tbl_PatientRow
        Inherits Global.System.Data.DataRow
        
        Private tabletbl_Patient As tbl_PatientDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_Patient = CType(Me.Table,tbl_PatientDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Empleado_ID() As Integer
            Get
                Return CType(Me(Me.tabletbl_Patient.Empleado_IDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_Patient.Empleado_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Empleado_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Patient.Empleado_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Empleado_Name' in table 'tbl_Patient' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Patient.Empleado_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NRCNo() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Patient.NRCNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NRCNo' in table 'tbl_Patient' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Patient.NRCNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Address() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Patient.AddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Address' in table 'tbl_Patient' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Patient.AddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DOB() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Patient.DOBColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DOB' in table 'tbl_Patient' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Patient.DOBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Phone_R() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Patient.Phone_RColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Phone_R' in table 'tbl_Patient' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Patient.Phone_RColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Phone_O() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Patient.Phone_OColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Phone_O' in table 'tbl_Patient' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Patient.Phone_OColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Phone_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Patient.Phone_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Phone_HP' in table 'tbl_Patient' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Patient.Phone_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MaritalStatus() As Byte
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Patient.MaritalStatusColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaritalStatus' in table 'tbl_Patient' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Patient.MaritalStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BloodGroup() As Byte
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Patient.BloodGroupColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BloodGroup' in table 'tbl_Patient' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Patient.BloodGroupColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ContactPhone() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Patient.ContactPhoneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ContactPhone' in table 'tbl_Patient' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Patient.ContactPhoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Remark() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Patient.RemarkColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remark' in table 'tbl_Patient' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Patient.RemarkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PicName() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Patient.PicNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PicName' in table 'tbl_Patient' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Patient.PicNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Section_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Patient.Section_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Section_Name' in table 'tbl_Patient' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Patient.Section_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Puesto_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Patient.Puesto_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Puesto_Name' in table 'tbl_Patient' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Patient.Puesto_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEmpleado_NameNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Patient.Empleado_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEmpleado_NameNull()
            Me(Me.tabletbl_Patient.Empleado_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNRCNoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Patient.NRCNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNRCNoNull()
            Me(Me.tabletbl_Patient.NRCNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAddressNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Patient.AddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAddressNull()
            Me(Me.tabletbl_Patient.AddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDOBNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Patient.DOBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDOBNull()
            Me(Me.tabletbl_Patient.DOBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPhone_RNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Patient.Phone_RColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPhone_RNull()
            Me(Me.tabletbl_Patient.Phone_RColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPhone_ONull() As Boolean
            Return Me.IsNull(Me.tabletbl_Patient.Phone_OColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPhone_ONull()
            Me(Me.tabletbl_Patient.Phone_OColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPhone_HPNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Patient.Phone_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPhone_HPNull()
            Me(Me.tabletbl_Patient.Phone_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMaritalStatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Patient.MaritalStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMaritalStatusNull()
            Me(Me.tabletbl_Patient.MaritalStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBloodGroupNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Patient.BloodGroupColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBloodGroupNull()
            Me(Me.tabletbl_Patient.BloodGroupColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsContactPhoneNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Patient.ContactPhoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetContactPhoneNull()
            Me(Me.tabletbl_Patient.ContactPhoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRemarkNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Patient.RemarkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRemarkNull()
            Me(Me.tabletbl_Patient.RemarkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPicNameNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Patient.PicNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPicNameNull()
            Me(Me.tabletbl_Patient.PicNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSection_NameNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Patient.Section_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSection_NameNull()
            Me(Me.tabletbl_Patient.Section_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPuesto_NameNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Patient.Puesto_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPuesto_NameNull()
            Me(Me.tabletbl_Patient.Puesto_NameColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class tbl_asistenciaRow
        Inherits Global.System.Data.DataRow
        
        Private tabletbl_asistencia As tbl_asistenciaDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_asistencia = CType(Me.Table,tbl_asistenciaDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fecha() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_asistencia.fechaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'fecha' in table 'tbl_asistencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_asistencia.fechaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property departamento() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_asistencia.departamentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'departamento' in table 'tbl_asistencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_asistencia.departamentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property emp() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_asistencia.empColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'emp' in table 'tbl_asistencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_asistencia.empColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nombre() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_asistencia.nombreColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nombre' in table 'tbl_asistencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_asistencia.nombreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property registro1() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_asistencia.registro1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'registro1' in table 'tbl_asistencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_asistencia.registro1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property registro2() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_asistencia.registro2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'registro2' in table 'tbl_asistencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_asistencia.registro2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property registro3() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_asistencia.registro3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'registro3' in table 'tbl_asistencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_asistencia.registro3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property registro4() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_asistencia.registro4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'registro4' in table 'tbl_asistencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_asistencia.registro4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property registro5() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_asistencia.registro5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'registro5' in table 'tbl_asistencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_asistencia.registro5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property registro6() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_asistencia.registro6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'registro6' in table 'tbl_asistencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_asistencia.registro6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property registro7() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_asistencia.registro7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'registro7' in table 'tbl_asistencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_asistencia.registro7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property registro8() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_asistencia.registro8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'registro8' in table 'tbl_asistencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_asistencia.registro8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsfechaNull() As Boolean
            Return Me.IsNull(Me.tabletbl_asistencia.fechaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetfechaNull()
            Me(Me.tabletbl_asistencia.fechaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdepartamentoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_asistencia.departamentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdepartamentoNull()
            Me(Me.tabletbl_asistencia.departamentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsempNull() As Boolean
            Return Me.IsNull(Me.tabletbl_asistencia.empColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetempNull()
            Me(Me.tabletbl_asistencia.empColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsnombreNull() As Boolean
            Return Me.IsNull(Me.tabletbl_asistencia.nombreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetnombreNull()
            Me(Me.tabletbl_asistencia.nombreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isregistro1Null() As Boolean
            Return Me.IsNull(Me.tabletbl_asistencia.registro1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setregistro1Null()
            Me(Me.tabletbl_asistencia.registro1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isregistro2Null() As Boolean
            Return Me.IsNull(Me.tabletbl_asistencia.registro2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setregistro2Null()
            Me(Me.tabletbl_asistencia.registro2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isregistro3Null() As Boolean
            Return Me.IsNull(Me.tabletbl_asistencia.registro3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setregistro3Null()
            Me(Me.tabletbl_asistencia.registro3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isregistro4Null() As Boolean
            Return Me.IsNull(Me.tabletbl_asistencia.registro4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setregistro4Null()
            Me(Me.tabletbl_asistencia.registro4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isregistro5Null() As Boolean
            Return Me.IsNull(Me.tabletbl_asistencia.registro5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setregistro5Null()
            Me(Me.tabletbl_asistencia.registro5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isregistro6Null() As Boolean
            Return Me.IsNull(Me.tabletbl_asistencia.registro6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setregistro6Null()
            Me(Me.tabletbl_asistencia.registro6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isregistro7Null() As Boolean
            Return Me.IsNull(Me.tabletbl_asistencia.registro7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setregistro7Null()
            Me(Me.tabletbl_asistencia.registro7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isregistro8Null() As Boolean
            Return Me.IsNull(Me.tabletbl_asistencia.registro8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setregistro8Null()
            Me(Me.tabletbl_asistencia.registro8Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class usp_RptNominaBonos1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As usp_RptNominaBonos1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As usp_RptNominaBonos1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As usp_RptNominaBonos1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class tbl_PatientRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tbl_PatientRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As tbl_PatientRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As tbl_PatientRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class tbl_asistenciaRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tbl_asistenciaRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As tbl_asistenciaRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As tbl_asistenciaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace ReportDataSetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class usp_RptNominaBonos1TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "usp_RptNominaBonos1"
            tableMapping.ColumnMappings.Add("fecha_ini", "fecha_ini")
            tableMapping.ColumnMappings.Add("fecha_fin", "fecha_fin")
            tableMapping.ColumnMappings.Add("section_name", "section_name")
            tableMapping.ColumnMappings.Add("empleado_name", "empleado_name")
            tableMapping.ColumnMappings.Add("puesto_name", "puesto_name")
            tableMapping.ColumnMappings.Add("Column1", "Column1")
            tableMapping.ColumnMappings.Add("prima_dom", "prima_dom")
            tableMapping.ColumnMappings.Add("bono_pun", "bono_pun")
            tableMapping.ColumnMappings.Add("bono_asi", "bono_asi")
            tableMapping.ColumnMappings.Add("hrs_extras", "hrs_extras")
            tableMapping.ColumnMappings.Add("desc_trab", "desc_trab")
            tableMapping.ColumnMappings.Add("dia_fest", "dia_fest")
            tableMapping.ColumnMappings.Add("bono_men", "bono_men")
            tableMapping.ColumnMappings.Add("bono_des", "bono_des")
            tableMapping.ColumnMappings.Add("bono_fijo", "bono_fijo")
            tableMapping.ColumnMappings.Add("total_bonos", "total_bonos")
            tableMapping.ColumnMappings.Add("total_pagos", "total_pagos")
            tableMapping.ColumnMappings.Add("total", "total")
            tableMapping.ColumnMappings.Add("estatus", "estatus")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Bitacora.My.MySettings.Default.ConnectionStringBonos
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.usp_RptNominaBonos"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@nomina_id", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal nomina_id As Global.System.Nullable(Of Integer)) As ReportDataSet.usp_RptNominaBonos1DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (nomina_id.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(nomina_id.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As ReportDataSet.usp_RptNominaBonos1DataTable = New ReportDataSet.usp_RptNominaBonos1DataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
End Namespace
