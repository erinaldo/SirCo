<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Btn_Adjuntar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAALBAAA
        CwQBG8oqrQAAAlNJREFUWEftlW9IE3EcxosgCHrb21711ldBUASBUO8qCCL7YxjFRGNrYrk5rWi2slvq
        dE2W23TNNtrQc7rpqazTNoslg8Fp+SdYf6gXFfWyV8LT92c5JAjuJwf35g4eOO6O5/n8nrv7/rYD2Kbr
        wQD0lK7h6+3ruXoDwGjAaGBLDVR2HNhJqiGlSQWSQpJIJtIu3t+aaw5QwD5SsXnMisRCBNK7JKZKY4gr
        T+BINYDulUgVPBCqAch4D+mzd86N+e85THwaRnx1AE+X+jC0EkHmQxo92QcM4gcDVQvBAxB1y068/Cpj
        cMWP0KKXMv4cnrwLD3O3MboUh5C5wyCeawpAhntJa8rPAmKrQQQXuuEvdpQBhBc34crY4Zy6AWlZRFXg
        OINQ9SpUNUBm1bZRM2a/TCKgeMrB/544kvUI5x/BNmJmANfUtKAWwH5vuhUT70X4CsJ/ARrjl9Eju+Ac
        tzGA+1oCmNhXLpVEdL1qw0blGyRNw7VoeHYJ5sEL8MntaB6xMAC7lgAV50InMfNxEu0zLWibbsKtcWu5
        CWusBlcj51HbfwbR132o7j/FAA5rBsCMyDDnzQoYUiJoTVlgF+vAKrdEL6I+fBam0Gn0ym50Zu6y8GXS
        Dq0B9pPpL/9cJxLFMJypxvXK6waqcD12BcFsN3yzAgtfIx1RE849ism4kg0jR9KKaCEA6a2I9GICkfxj
        tNA1uveNdEJtODfA31exm0IEtgcc7TqIY55DLPgNqZdNS57wLQFsDqBAtjFxb0CbPVTNAd5V8TxvABgN
        GA3o3sBvHP5U8epNRo8AAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="colCorrectos.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colDuplicados.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colIlegibles.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="ToolTip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAHwAAAB8AAAAfAAAAHwAAgD8AAMB/AAA=
</value>
  </data>
</root>