<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Btn_Regresar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
  <metadata name="sfdRuta.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="tt_edo_cartera.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>110, 17</value>
  </metadata>
</root>