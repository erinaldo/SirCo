<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="CMenu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>503, 17</value>
  </metadata>
  <metadata name="ToolTip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAACQAABILAAASCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHCUxExYcJgcAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOEdd1goNESQCAgMHAAAAAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAABAAAAAgAA
        AAMAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARldv2A0R
        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
        /v78/Pz/IyMj/gsLC/8LCwv+ampq/uLi4v7R0dH/nZ2d/gkJCf4KCgr/t7e3/q2trf6Dg4L/zMzJ/uPj
        4P7S0c7/EhIS/gwMDP4MDAz/iomI/tfW0/6Af37/ISEh/kdHRv+pqac+AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU2WA2Gtsbv/ExMT/k5OT/w0N
        Df8MDAz/xcXF///////7+/v/JCQk/w0NDf8eHh7/Z2dn/42Njf9zc3P/bm5u/3Z1dP+dnJv/UlJR/xsb
        G//f3tz/4+Lg/+Pi4P/j4uD/UVBQ/w4ODv8xMTH/kpKS/xgYGP8NDQ3/DQ0N/2VlZPuRkI8NAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVWiD2Ofo
        6v7/////lJSU/g8PD/4PDw//wMDA/v7+/v74+Pj/ZmZl/qSjov/d3Nv+enp5/hcXF/4bGxv/MjIy/ri4
        t/7ExML/d3d2/hAQEP6op6b/4uHf/uLi4P7Ozcz/cXFw/r+/v/77+/v//v7+/kZGRv4PDw//ISEh/qal
        pOYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAWGuG2Ofo6v7/////lJSU/hISEv4QEBD/nJyc/oaGhv41NTT/2trY/uHh3//h4N7+fX18/hMT
        E/4cHBz/JCQk/qmop/6kpKL/goKB/khISP6GhYX/dnV0/kFBQP4WFhb/EhIS/snJyf7//////v7+/qur
        q/5ycXH/09PR/uDg3vm8u7oaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAWWyH2Ofo6///////o6Oj/2ZmZf+1tLT/QEBA/xQUFP8ZGRn/1tXU/+Hg
        3//h4N//jYyM/3x8fP/MzMz/4uLi/0tLS/8ODg7/EBAQ/8vLy//z8/P/KSkp/xQUFP8UFBT/FBQU/2Bg
        YP/6+vr/rKys/0NDQ//Y19b/4eDf/+Hg3//My8qgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWGuH2MDBw/6pqan/wMDA/unp5/7i4eD/S0pK/hYW
        Fv4ZGRn/0M/O/t7d3P+OjY3+cnJy/v7+/v7+/v7/9fX1/pqamv4SEhL/EhIS/oODg/7w8PD/enp6/hYW
        Fv4WFhb/HR0d/mlpaP5TU1P/FhYW/hYWFv6EhIP/4N/e/trZ2P+lpaT9nZybXAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWGuH2Gttb/5+fn7/urq5/u3s
        6/7t7Ov/fHx8/ioqKv4YGBj/nJyb/kRERP8ZGRn+V1dX/v7+/v7//////Pz8/uPj4/4kJCT/FBQU/j09
        Pf7h4eH/09PT/i4uLf54eHj/ysnI/t/f3v6enp3/GRkZ/hgYGP5DQ0P/lZSU/ltbW/9paWn+lpaW9I6O
        jTwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV2uH2G1u
        cP9/f3//urq5/+3s7P/t7Oz/pKSk/4qKiv+4uLj/eHh4/zMzM/8gICD/QkJC//7+/v///////v7+//Pz
        8/91dXX/JCQk/zIyMv+JiYn/XV1d/6yrq//f3t7/397e/+Df3//i4uH/f39//7S0tP/6+vr/zs7O/39/
        f/9ubm7/RUVF/2xsbOyioqIuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAV2uI2Gxtb/6AgID/ubm5/uzs7P7Y2Nj/wcHB/vj4+P7/////srKy/oGBgf99fX3+enp6/vDw
        8P7S0tL/q6ur/nl5ef5ubm7/urq5/ri4t/55eXn/S0tL/nh4eP7m5ub/6+vr/tfW1v6enp7/hYWF/uPj
        4/7//////f39/mFhYf8pKSn+f39+/tPT0v/BwMDmt7e3MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAWm6K2CkqLP59fX3/t7e3/pSUlP6Dg4P/vr6+/v7+/v7/////xcXF/oSE
        hP+mpqb+zc3N/oqKiv6BgYH/gYGB/oGBgf5+fn7/tbW1/r6+vv61tbX/bW1t/nNzc/6oqKj/tbW1/oSE
        hP51dXX/Wlpa/k5OTv7o6Oj/9vb2/paWlv/Nzc3+3t3d/uPi4v/k5OT+xcXF5ri4uBkAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXG+M2NfY2v//////pqam/z8/P/9dXV3/sLCw////
        ///9/f3/1NTU/9/f3//s6+v/7Ovs/5ubm/+Dg4P/g4OD/4ODg/+CgoL/m5ub/8LBwv+9vL3/jIyM/2Nj
        Y/+oqKj/0tLS/z09Pf8jIyP/IyMj/zs7O/+Wlpb/OTk5/zY2Nv/Ozc3/6unp/+rq6vfo5+ed3NzcJAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXnOQ2Ofp6/7/////ra2t/iUl
        Jf4lJSX/fHx8/t3d3f5iYmL/X19f/uPj4//k5OT+5eXl/qCgoP5gYGD/Xl5e/llZWf5RUVH/T09P/qur
        q/6BgYH/T09P/q6urv7n5+f//Pz8/t3d3f5NTU3/goKC/tra2v7j4+P/wMDA/n5+fv+goKD04eHhkujn
        6CIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYHSS2Ojp
        6/7/////0dHR/mxsbP5KSkr/aWlp/jAwMP4lJSX/KCgo/s3Mzf/b2tv+29vc/piYmP53d3f/nJyc/qys
        rP7Dw8P/4uLi/nV1df4hISH/ICAg/mlpaf7a2tr/8/Pz/vT09P6fn5//zs3O/unp6v7p6er+5+bn3Lm5
        un2hoKAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAYHWT2Ojp6///////2NjY/5eXl//AwMD/v7+//3R0dP9hYWH/UlJS/6qqqv+Xl5f/UlJS/zY2
        Nv/w8PD//////////////////v7+/8jIyP9MTEz/UFBQ/1xcXP/BwcH/19fX/5eXl/9+fn7/f39//7i4
        uX3a2top39/fAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAYHWT2NLT1f7Jycn/u7u7/ufn5/7R0dH/wsLC/n9/f/6Ghob/w8PD/svL
        y/+BgYH+gYGB/oGBgf7S0tL//v7+/vv7+/7Y2Nj/uLi4/qmpqf6zs7P/qKio/qioqP6ZmZn/bGxs/nd3
        d/5+fn7/f39//oyMjFEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYHWT2Hh5e/+AgID/np6e/+fm5//Q0NH/xMTE/5eX
        l//u7u7///////Ly8v+CgoL/goKC/4KCgv+qqqr/vr6+/42Njf+AgID/gICA/4CAgP+7u7z/x8bH/7u7
        u/+4uLj/d3d3/3Fxcf98fHzwf39/fn9/fwQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYHWT2Hl6fP6BgYH/l5eX/ufn
        6P7R0dL/urm6/sPDw/7+/v7//v7+/v////+YmJj+mpqa/sjIyP7Z2dr/goKC/oGBgf6BgYH/gYGB/oGB
        gf6cnJz/zs7O/ry8vP6/vr/xrq6us35+f2l6enoMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYXaU2Hp7
        ff6CgoL/jo6O/ufn6P7T09T/lZWW/pubm/74+Pj//v7+/vn5+f/Nzc7+5+fo/ufn6P7n5+j/l5eX/oKC
        gv6CgoL/goKC/oGBgfaHh4fLx8fHhcvLzEbExMQNAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAYneW2Ht8fv+Dg4P/hoaG/9bW1/+fn5//bm5u/3x8fP/t7e3/7e3t/5mZmf+oqKj/6Ofo/+jn
        6P/o5+j/u7q7/4ODg/+CgoO8gYGBQYODhBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAY3mY2K2usP7Nzc3/5+fn/p+fn/59fX3/bm5u/mxsbP7Jycn/j4+P/oSE
        hP+NjY3+5eXm/ubm5/7n5+j/3Nzd9IyMjLOGhoYrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZXqZ2Ojq7P7//////v7+/rKysv6BgYH/dXV1/pCQ
        kP6JiYn/fHx8/oSEhPeGhobUy8vMpOPj5H/k5OVS0dHSFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZnua2Ojq7P///////////8rK
        yv+rq6z/urq8/7i4uv+dnZ7siIiIX4SEhBMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZnua2KSl
        qP6xsbH/pKSk/q+vsP7h4eP/xsbH/ri4uv69vb/RqKipAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAZXua2H+Ag/6IiIj/h4eH/paWlv7k5Ob80NDSzcnJy3jExMYTAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAZXub2H+Bg/6Li4vhjIyMqaamp2XKyssi1dXXAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZXub2H+Jlz4AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZnyc2F1thRsAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeIif2ml2
        iBsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACcoqsGnJ2d64qPlxsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACvsLECvL29QaWmpwIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAAn///////
        AACH///jh/8AAIH8AAAD/wAAgAAAAAH/AACQAAAAAH8AAJwAAAAAAwAAngAAAAABAACfgAAAAAEAAJ/g
        AAAADwAAn/AAAAH/AACf/AAAH/8AAJ+AAAAf/wAAnAAAAB//AACAAAAAP/8AAIAAAAA//wAAgAAAAD//
        AACAAAAAP/8AAIAAAAB//wAAgAAAAD//AACAAAAAP/8AAIAAAAAf/wAAgAAAAA//AACAAAAAB/8AAIAA
        AAAD/wAAgAAAAAH/AACAAAAAA/8AAIAAAAAP/wAAgAAAAD//AACAAAAA//8AAIAAAAP//wAAgAAAA///
        AACAAAAP//8AAIAAAH///wAAgAAH////AACAAB////8AAIAAf////wAAgA//////AACAH/////8AAIA/
        /////wAAgP//////AACf//////8AAJ///////wAAn///////AAAf//////8AAB///////wAA////////
        AAA=
</value>
  </data>
</root>